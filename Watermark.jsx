/* ----------------------------------------------------------------------------------------------------------------------
//DESCRIPTION:Watermarks is a hidden InDesign-feature that can be used with this script

+    This script is part of project-octopus.net

+   Author: Gerald Singelmann, gs@cuppascript.com
+   Supported by: Satzkiste GmbH, post@satzkiste.de

+    Modified: 2023-04-26
 
+    License (MIT)
		Copyright 2023 Gerald Singelmann/Satzkiste GmbH
		Permission is hereby granted, free of charge, to any person obtaining 
		a copy of this software and associated documentation files (the "Software"), 
		to deal in the Software without restriction, including without limitation 
		the rights to use, copy, modify, merge, publish, distribute, sublicense, 
		and/or sell copies of the Software, and to permit persons to whom the 
		Software is furnished to do so, subject to the following conditions:
		The above copyright notice and this permission notice shall be included 
		in all copies or substantial portions of the Software.
		THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
		OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
		FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL 
		THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
		LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
		FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
		DEALINGS IN THE SOFTWARE.
// ---------------------------------------------------------------------------------------------------------------------- */
#targetengine "octopus_watermark"
#include "./includes.jsxinc"

init();
var script_version = get_script_version();

if ( app.documents.length ) {
	log_run();
	set_watermark( __("Wasserzeichen"), script_version );
} else {
	cs_alert( "stop", __('no-doc'), "", "OK" );
}

function set_watermark( title, version ) {
  var errs = [];

  var doc = app.activeDocument;

  // ---------------------------------------------------------------------------------------------------------------------------------
  //  Schriftenliste sammeln
  //  { families: ['arial', 'berial'], styles: [ ['regular'], ['regular', 'bold'] ] }
  // ---------------------------------------------------------------------------------------------------------------------------------
  var working_fonts = get_working_fonts();
  var font_ix = Math.floor(working_fonts.families.length / 2)
	for (var n = 0; n < working_fonts.families.length; n++) {
		if (working_fonts.families[n] == doc.watermarkPreferences.watermarkFontFamily ) {
			font_ix = n;
			break;
		}
	}

	// ---------------------------------------------------------------------------------------------------------------------------------
	//	Ich biete Material-Colors in TailwindStruktur zur Auswahl an. Url in der Funktion
	//	color_values['amber']['500'] = '#abcdef';
	// ---------------------------------------------------------------------------------------------------------------------------------
	var color_values = color_init();
	var color_names = [];
	for ( var cname in color_values ) {
    color_names.push( cname );
	}

  // ---------------------------------------------------------------------------------------------------------------------------------
  //  Die Eigenschaften definieren
  // ---------------------------------------------------------------------------------------------------------------------------------
  var props = [
    {
      name: "watermarkText",
      type: "text",
			panel: __('Inhalt')
    }, {
      name: "watermarkFontColor",
      type: "color",
			panel: __('Formatierung')
    }, {
      name: "watermarkFontFamily",
      type: "fonts",
			panel: __('Formatierung')
    }, {
      name: "watermarkFontStyle",
      type: "styles",
			panel: __('Formatierung')
    }, {
      name: "watermarkFontPointSize",
      type: "number",
			panel: __('Formatierung')
    }, {
      name: "watermarkHorizontalPosition",
      type: "enum",
			panel: __("Position")
    }, {
      name: "watermarkVerticalPosition",
      type: "enum",
			panel: __("Position")
    }, {
      name: "watermarkHorizontalOffset",
      type: "number",
			panel: __("Position")
    }, {
      name: "watermarkVerticalOffset",
      type: "number",
			panel: __("Position")
    }, {
      name: "watermarkOpacity",
      type: "number",
			panel: __("Sichtbarkeit")
    }, {
      name: "watermarkRotation",
      type: "number",
			panel: __("Sichtbarkeit")
    }, {
      name: "watermarkVisibility",
      type: "boolean",
			panel: __("Sichtbarkeit")
    }, {
      name: "watermarkDoPrint",
      type: "boolean",
			panel: __("Sichtbarkeit")
    }, {
      name: "watermarkDrawInBack",
      type: "boolean",
			panel: __("Sichtbarkeit")
    },
  ]
	var state = {};
	var saved_state = doc.extractLabel( "cs_octopus_watermark");
	if ( saved_state ) {
		state = JSON.parse( saved_state );
	}
  for ( var p in props ) {
    try {
      state[props[p].name] = doc.watermarkPreferences[props[p].name]
    } catch(e) {
      errs.push( __('read-error') + props[p].name + ": " + e );
    }
  }
	var was_visible = doc.watermarkPreferences.watermarkVisibility || doc.watermarkPreferences.watermarkDoPrint;

	var window_position = app.extractLabel('octopus_position_' + title);
  if ( window_position != "" ) {
		window_position = JSON.parse( window_position );
  }

	var ui_is_light = app.generalPreferences.uiBrightnessPreference > 0.5
	
  var width = 300, lw = 140;

  var w = new Window('dialog', title, ( window_position ? { x: window_position.x, y: window_position.y} : undefined ) );
  if ( "I want to be able to collapse this ") {
    w.orientation = 'column';
    w.alignChildren = ['fill', 'fill'];
    w.fish = w.add( 'group {orientation: "row", alignChildren: ["fill", "bottom"]}');
    w.main = w.add( 'group {orientation: "column", alignChildren: ["fill","fill"]}');
    w.btns = w.add('group {orientation: "row", alignChildren: ["right", "fill"]}');
    w.footer = w.add('group {orientation: "row", alignChildren: ["right", "fill"]}');
    
    var _fl = w.fish.add("group {alignChildren: ['left', 'bottom']}");
    var _fr = w.fish.add("group {alignChildren: ['right', 'bottom']}");
		_fl.add("image", undefined, unescape("%89PNG%0D%0A%1A%0A%00%00%00%0DIHDR%00%00%01%B2%00%00%00B%08%06%00%00%002%96S%B1%00%00%00%09pHYs%00%00%0B%12%00%00%0B%12%01%D2%DD%7E%FC%00%00%20%00IDATx%9C%ED%5D%09x%13e%FA%FF%92L%26I%93%F4%3E%B9Zh%81R%A0%94CJ%B9%8A@E%C0%A3%A2%C2%22%20%A0.*%EB*%AB%BBZV%10%14%0F%D4%5Dqw%5D%14%F5o%CBQ%11Y%A5%AE%CBe%8B%94%B3%14%A4-m%B9z%B7%94%DE%07m%92%E6N%FE%CF%3B%9D%89%93%E9%A4M/%0A%F6%FB%3DO%9E%A6%93%99of%BE%EB%FD%DE%F7%FD%BD%EF%27%B0Z%AD%08%03%03%03%03%03%E3n%85%10%B7%1C%06%06%06%06%C6%DD%0C%2C%C800000%EEj%60A%86%81%81%81%81qW%03%0B2%0C%0C%0C%0C%8C%BB%1A%C4%9D%FC%F0%0F%9FK%5C%07%7Fu%26%E3%18B%28%AA%25%84%C2j%91@X%F9%7D%E4%D2%7D%7D%FFt%18%18%18%18%18w%02%EE%18%D6%E2%D2%8B%FB%03%1B%B4%9A%8Du%1A%CD%AC%1A%8Dj@%A3%B6E6%CC%C3%1B%0D%F3%F4F%0A%92%B4%9D%A76%18PQC%1D2%98Mj%0F%99K%C1%607%8F%3F%7E%7B%CF%92%D3%7D%FA%F0%18%18%18%18%18%7D%86%3E%17d%F3N%27%7CY%D1%DC%B40%B7%BA%D2%7F%AC%DF%00%145d%28%0A%F7%1F@%09%B0%8E%90VV%8C%92%AEd%23%B1HT8%C2%DBw%CE%DE%89%8F%97%F6%E9%CB%60%60%60%60%60%DCv%F4%89%20%5B%7Ca%DF%F4%1BM%8D%FF%AAR%AB%C6*I%89%A8%A8%B1%0Em%BCw%3E%25%C0%BA%82%E4%82kh%7Fn%A6vz%60%F0%28%2C%CC0000%FA%17n%AB%8F%0C%CC%877%9Bo%ED%BC%D1tk%FA%23a%E1%A2%98%90P%F4%DA%91%1F%D0%FB%F3%1EvJ%03s%04%28%A7%A8%A1%5E%96WWs%0C%21%14%D2%DB%EF%81%81%81%81%81q%E7%E0%B6%B1%16%81%B8q%B6%AC%28o%94%8F%7F%F4%F6%87%16SB%0CL%83%CE%9A%11%3B%C2%B3%93%A7%A1%8C%8A%1B%C1%8B%D2%F7.%E9%EDw%C1%C0%C0%C0%C0%B8s%D0%EB%1A%19ha%A0%29%91%22%22%F8%CD9%0B%91%9FBi%FB%0DH%1B%CB%22%EE%E9%F6%3D%C0%B4%98SU%81%E6%06%8FD%95%AA%A68%84%10f5b%60%60%60%F4%13%F4%AA%20%03%ED%E8JM%E5%97%0BF%8EV%84%FB%0FD%1A%83%1E%21%A4t%E2J%E7%01%C2%10%B4%3B%F8@%F9%7F%3A%F4%FD%C8%7E%D2v%18%18%18%18%FD%1E%A87M%8B%20%C4%F2%EAj%F6%C4E%DF%A7%D0%18%0C%14%BB%F0%AD%E3G%EC%CE%E9%AE6%96%5DUA%7D%18%C8I%09%22E%22Y%B7%0A%C5%C0%C0%C0%C0%B8%AB%D0k%82%0C4%B1%CDs%E6%13%E0%07%03a%03%DA%D2%B3%F7L%A3%04%DA%8E%F3g%28%FFXw%90t%E5%12UFlX%B8%5D%29%10%7B%86%FDd%18%18%18%18%FD%07%BDbZ%9Cy%FC%8B%D4%C5c%27%28@C%82%B809IR%A6%3FD%FB%B3@%A8%C1o%5DEb%D6%05%AA%5C%3E%92%08%F8%E0T%06%7D%00%EE%C3%18%18%18%18%FD%03%BD%22%C8%EA4%EAH%104%D5j%15%A5%7DE%0D%09%B2%FD%C6%F8%B3%BA%0A%10%84%20%04%7B%82%E9%88%81%81%81%81q%F7%A3%C7M%8B%10%EC%3C%C2%DBO%8A%28%1F%D6M%EA%18%10%3D%BA%0B%D0%E2%3E%3A%FD3%AAQ%AB%DA%98%1310000%FA/z%5C%23%D3%9BM%93%C6%D1%82%AB%BB%DA%17%08/%F0%A9%81f%97v%A3%B8%5B%D9%3F00000%7E%9B%E8q%8D%ACQ%DB%12%CB%F8%BF@%00%81%3F%AB%AB%C4%0E%28%07%98%8D%10%EC%1C%3B*%1C%7D%7E%E14Uf%7B%00b%89DD%FC%D2%93%EF%84%81%81%81%81q%E7%A2W%7Cd%90%AD%1E%CC%80%81%1E%9EhnH%A8%5D%10tW%C0%084%F0%BB%81P%8C%09%19%E9%90%2C%A21%EA%11%CE%86%8F%81%81%81%D1%7F%D0+%82%0C%08%1Eo%CC%BE%BF%5B%CCD%3E%00%C1%A3%23%92%87P%20%BC%D5%A37%C5%C0%C0%C0%C0%B8%A3%D1+qd%E0%C7%EAi%21%E6%0C%C0%AC%E8%ED%22/%B9%ED7%C6%C0%C0%C0%C0%E83%DC%B6%A4%C1%B7%03%29%05%D7%90T%2C%FE%0Ew%27%0C%0C%0C%8C%FE%83%1E%17d%1E2%97%A4%F6%7E%E7%23k%80%DF%AB5%0Fc+S%91I%3D%D5%19%92%08%5C%97YYn%3A%1E%FD%F4%DB%5Dyn%0C%0C%0C%0C%8C%BB%13%3D%EE%23s%11%93%07%0A%1B%EA%B71%FFCR_%B5%C1@%7D%07%D2%C7%96%E3%87%D1%27%0F.%B6%9D%0F%02%0B%CC%90g%CB%8AQzY%092%18M%E8%86%FA%16%FA%D3%B4%D9%0E%FDa%8C%D0c%9B/%81%A6%1F%E6%EB%7F%06%F7C%0C%0C%0C%8C%FE%85%1E%D7%C8%60%87f%BD%C9%D8%04%02%0A%98%8B%F1%17%D2%90%B9Q%8F*%AB%1B%D0%AE%0B%E7P%D4%E0%A1v%E7%83%3F%0Dh%F5%C5%D5%B5%E8%EB%29%8BQ%F2%9C%A7%D0%DF%26/D%D5%EAf%5E%B6%23%23%C4@p1%00-%EFTi%A1a%A0%AB%FBJ%DC%7F1000%FA%17z%C5G%26%21%88b%A0%E0%03%F5%7ES%C4%5C%F4%D7%D1%B3%102X%D0%CFs%9EAB%24hs%FE3%E3%A2%D0%81%19%CB%D1%F1%CA%22%F4%F1%E53hy%60%04%95%C1%83%0B05%82%E6%06%1A%1E%7C%183%25%B0%24%C7%F8%0D%F8%08%84%28%EE%BF%18%18%18%18%FD%0B%BD%22%C8%02%94n%5B%93%0B%AES%DFI%81%88%FA%9B%D5P%89%B2%1B+Q%0Bmfd%A3%D6%A0A%E9%0D7P%84W%00%0ARx%A0CU%D7y%CD%8A%A0%E5A%BA+%20u01e%90%7B%11%21k%D6%C1%A9+%D6%E3%BE%8B%81%81%81%D1%FF%D0+%82%EC%FB%C8%A5%FB2+o%18%82%3D%BD%D0%F6%FCtt%CB%A0EIsV%A0%AFJ2%D0%03ac%DB%9C%3Fu%C8P%B4-%EF%2C%CAU%D5%A0fd@%EB3%8E%F2%A6%A2%02-%0F%3E%AD%02m%00J%29%BC%86%F6%E7fj%83%3C%BCbq%DF%C5%C0%C0%C0%E8%9F%E8%B5%1D%A2C%7D%FCvgWU%3C%BD%E2%9E%C9%E8%A9%8C%03f%A5Xb%9E%1C%18D%F2%F9%BD%80%B4%B1r%F2%94%D6M2%C5%08m%BD%FFa%DE2%C1%9CX%D8PO%7D%87s%9Bt%3ASLH%E8%28lR%C4%C0%C0%C0%E8%BF%E85A%E6%26%91%25%145%D4%3D%0D%26%C0%DFO%9E%06%F6EQG%D7t%94%10%18%18%90%CB%23%26%A1j%8D%0A%BD%F5%F3a%EB%BC%E1%A3%96c%21%86%81%81%D1_%21%88%8F%9B%85%10%9A%C5%7D%7D%EB%EA%AD%9B%FBS%95%F4%9A%203Y%2C%03IQ%87%B2%8B%17L%D6%7BD%A7%A5%02R%07%7Cr%AA+%D0%E3%7B%BFB%13%06%0C.%1C%E1%ED%3B%A7/%85%98%20%3E%0E6Y%0B%E2%E9DY%08%A1%12%EB%EA%ADY%7D%F4h%18%7D%08%BA_%AC%E2y%82%04%EB%EA%AD%BCYg%1C%5C%93j%5D%BD5%B5%13%E7%3B%2C%1F%E3%B7%0B%1F%B9%E2%11%7F%85%EB%8Bl%25%20%F1%12%953%1D%0B%B2%9E%80%C6%A8%8F%89%1C%FC%EB%86%9A%20%98%9C%DDG%0CL%8D%C0x%04%0D%2C%3E%E3%9Cv%A8%87%D7y%99X%5C%F0%D0%A8%B1%B9%10%A7%D6%C7%02l%95%9C%247%82%8C%1D%E1%ED%AB%1A%E5%E3%AF%04%BF%1D%030y%165%D65%92%BB%5E%97%19%CD%E6%1D%08%A1%8F%F1%04%D3%EF%B0i%D9%B8I%B6w%CE%AA%BCi%BA%5CS%89%DA%99%5Cf%0Drs%7F5%3A%28D%86%E8%3ETP_%EB%07%C2%CC%C1%F9%B1A%1E%5E%1B%A6%0D%19*%02s%FB%0FW%B3%FB%DD%0A%1C%E3W%80%10%83%A4%EA%0ChA%D6%AF%D0%AE%20%5B%94%BEwI%A3%B6%E5%DD%FA%16%CD0%10.%22%A1%A0AN%92%07%8EN_%F5LG%95T%DA%D8%B0%84%BDJ%60%E2%BF%10m%22%EC%28%D8%19%7Ci%F0I++%96y%C8%5C6%F4uF%7BP%E1I%11%F1%CD%08o_%97%85%23G+%E9%7D%D6%DA8%FC%96%B5%FE%F1%80wL%BA%92%FDRJ%E1%F5%97%04%F1qo%E2%89%A6%7F%00%16-%B2%DD%1Bk%A3%86%0C%F5a%FA%F80Oo%A2%E4V%C3%83%8E%04%19%29%22%EE%5B0b%B4%8CY%E8%8D%AD%AA@%EF%A4%1E%99%EF%A8%C2%DC%A4%B2%D8G%C2%C2E%D0%07%81%B9%9BRx%3D%A3%BF%D7%3BF%FF%86CA%06%3B%3D%DFl%BE%B5%FB/3%E6%88Y%194%3C%81%C01%E1%C8%27%8F%85x%F9%3C%E0H%B8%80%00%1C%EC%E6%A1%60%FE%A7H%1C%2C%C0%E0c%069%7C%07%3F%1A%03%A0%ED%CBI%D2%B6%21%27%AC4%DEI%3D%FA%23%08%87%BEj%29%D0%C2H%91%E8%B3U%13%22%25l%AD%92I%A7%05B%0B%E0%ABPR%E1%01%20%80%E1%FD%5E%9E%3E%9B%D2B%B7%9EL%7EU%91%F8%C64%8D%C1%F0%B8u%F5%D6%5E%CD%CEO%DB%CC%01%11%08%21wlr%BA%FD%B0X%AD%29%D9U%15K%99%3E%0E%0B%3A%8DA%3F%C1%D1%83%08%05%82%B9%ECE%1F%7CW%E9%F5%81%82%F88w%BE%FE%D2b4D2%BB%AEgV%96%EB5%06%FD%8F%BD%F1%92%B8/a%DC-p%28%C8%0A%1B%EA%12%D6G%C7%88%B9Y%ECa%90%05%7Bz%B9m%3Ev%F8%F8%A2%F4%BD%CB%81j%CF%FE%7D%E9%C5%FD%81Wj*%BF%8C%8B%BE%CFv%8C+%AC%D8%F9%16A%08%B0%7F%ABP5%E9%9Bu%3AcLH%28%25%08A%28D%0E%0At_xv%F7%7B%7D%11+%D6*%C4%88%1D%1F-x%84dk%91%60*M%C8H7%08%05%82%12%9D%C9%B8%97%3E%1C%21%16%89%E6M%0F%1C%26%5C%1B9%83%84%BA%83k%B6-X%24%7B%E5%F0%81%99F%B3e%3BB%E8%89%5EzNX%EDo%F2%90%B9T%FA+%94%1EnR%17%E9%F5%BAj%5D%A3%B6%05%CCSx%F2%B9%8D0%98M%E7%CF%97%97%CE%8F%0D%0B%87%C9%9F2%95%FB+%5Co%81%60%E0%FA%BD%C0%DFE%8AD%AE%5C%0B%05%98%AD%F3%EAj@%90%24q%CE%8Fp%97%CA%2C%0C%FB%F7%97%F22m%3B%26%C8.%01%F7%25%8C%BB%0D%0E%E3%C8%DC%A4%D2%C1%EC%9D%9Ea%E2n%0D%3En%1D%98%9B%E7%CC%27@c%03%ED%8B%7D%5D%5E%5D%CD%B1%C5c%27%28%98%81%06%82%0A%E2%BD%D8%7E%245+%28Z%CD%09%90%D6%1A%8DuR1%B1%8F%AD%C5%81VV%DA%D8%F0g%10%92%1D%D5/%9C%C3%7D%A6%AE%02%26%19%B1H%F4%E9%5Bs%17%DA%091H%BD%95%90%91%5Em0%9B%E6iWl%19%09fC%FA%13k4%9B%03N%97%16%A5%FC%E9%D0%F7ZvN%C8%BF%CF%7F%84TJ%24%8F%0A%E2%E3%D6%F5V%1Fyl%CC%F8%C6%C4%C5+%03%FE%BE%60%91%14%F6%83%F3%94%B9h%7B%EB%5E%18%ED%22%F5jm%95%9C%7D%C2%A4ACd%7C%EC28%16%E6%1B%D0%A6%9DFx%FB%92%B4%26%D4%E6%FC%F1%03%06Q%0BP%E8_U%EAfwG%A4%90%EE%00%F7%25%8C%BB%09%BC%1A%19%08%82%88%80A%94%E4%81%C1%F2%AF%B4%13%85%17%E7%FD%21%E4%E1s%89%EB%CE%A7%1E%DD%B84%7C%A2%27L%EC%9B%E7%2C%10%EF8%7F%E6%9B%A8%94%CF%E2%7C%15%CA%9D%25%8D%F5%AF%3F%3C*%DC%9B%D1%B0%E0%DAO%D3O%9B%BC%5C%E4%96a%9E%DETy%A0%9D%B5%B7c%B4%C6%A0%AFM%9B%FB%DC3%93%7E%DA%BE4%DC%7F%80%0Bs%FC%F9%C8%E9%C4%CE%CC%F4S%08%A1%21%8E%AE%9D%FE%F3%E7W%26%0F%0A%1C%E5%A7pE%0F%A6%ED%D9Y%A7Q_M%9B%FB%DC%F8%AE%B6%87%ABD%FA%F7%99CC%04l%B3%0F%3C%7Fjq%7E%8B%C9b%99%C2gf%A1MA%0B%C9%5D%AF%1F%DCz%229zK%CC%03%D4%84%06%C2%EC/3%E6%92%1B%92%7F%7CW%10%1F%97%D0%91%89%11V%DE%F4D%16%C4%3A%0CL%C8%2C%F6%7DY%0C6%BEI%12%B0%8Ae%22j%97%14@%9F%C7%98%91%D8%F7Lu%E2y%DB%A5%01%83%99%8C%FE%9D%99%9C%A1%BC%A4%F6LU%A0%0Ds%DE%1F%D1%8C%D0%04%9Es%F9%DE%8B%F7%5C%D65N%D5qg%01%8CUr%D7%EB%E6j%B5J%CC%F4%F5%F1%01%83%24%C7%8B%F2%DB%F8%C9%C0%3F6yP%A0%3B%F7%16%8E%CE%97%93%92%15%CC%D8%A4%13n%3B%F4%8F%D1%EF7%8B%D3%9E%A9%F4%FB%B5i%CF%9E%EAK%3Cm%8DhM.%B5%A3zu%D0%E6v%F7%E2%F4%B5%04%07%ECa%5B%DB%D3%CF%13%CB*%D7%E1%B3%F0%D4%99C%F6%A8%83%E7%EFT%9Dw%E7%BD%3B%DBG%1D%8C%D1%A4%DF%02%C3%9AW%90%99%AD%96%00%10%06%88%F6Y%01%D5%1D%BE%FF0e%D9%C7%C0%C2c%04%06%F8%B1%9E%9D%3C%0D4%B6%08%F8%AC%88%B8%C7.%23%FD%F6%F4S%86%81nn%BB-%16%D7%A7%99c%A0%D9%B1%05%03%DB%CC%08%DF%C5%22Q%13%7C%1F%E8%EA%F6zb%D6%85m%0C%1B%07%04%E7%F4%C0%E0%C1%F3N%27%7C%C9G6%81%E3K%C3%27%8E*%04%0D%B0%E0%1A%3C%97%04%9Ei%DC%E1%7F%D6%86%F9%06L%EA%2C%D3%91%1E%D4%8BV%8E%9Flw%FC%93s%27u%26%8B%E5%0F%1Du%22%A3%D9%BC%ECR%D5%CD%0A%26%0B%09%A2%CD%B2%C3%BD%7C%04Wk%AB%A1%D3%7E%CCsO%E8%FC%EBdb%F1%0Br%92%14%8E%F5%1B%E8%01%D9Q%18%00%FB-%AF%BE%C6%24%DB%BDQ%A53%19%BF%B6%AE%DE%0A%DA%5D%90%97%8B%FC%F5%FB%87%8F%22%C6%D2%7E%13%06%0F%8D%1A%EBQ%A3V%D9%12%29%F3%D1r%99%7B%8AE%A2%D7%5C%25R%D3%E4A%816m%1A%B4%E5%AB%B5U%60%E2RJwoH%D7%9BLq%8E%065%D0%80%C7%F9%0F%7C%91%BDHa%EE%07Z%28%21%14%BE%EB%AFtE%0C3%0F%02%DB/V%94%BD%27%DD%BD%E1%92%DEd%FA%1D_%7D%FA%C8%15%EB%C7%F9%0F%1C%C1%94%09%FD%E3R%D5%CD%3Cz%F2%E2%C2%8E%29H%27%92N%E7%3B%17%26%0D%29%21%FE@N%92%84%A3%3Av%D9%B3Q%A35%1A%F7%D0u%DCi%B8%88%C9%F4%EC%AA%9B%D1%8C%AF%D7%91%9F%8C%ED%1Fc%9B%E0%1D%9D%0F%C7%DA%F3%8F1%C2%88%10%0A_u%95H%CD%DC%F6%BCP%5E%FAr%85%AAI%29%88%8F%DB%09%ED%CE%99%5C%BB%DB%97%82H%11%F1.%18F%B8%8C%5E%9A%B9I%D0%FD%88%B7%BDQk%9E%D6%E7f%04%06G%3A%E8G%9B%E1%BD%FC%15%AE%FA%C8%C1A%EE%A7K%0BM%F5-%9ATn%DFc%FA%89%20%3E.%89%7E%C6%97F%F9%F8%E9%26%0C%18%2C%85%DF%F3%EBk%8D%E7%CBK%C5%82%F8%B8%7F0%ED%0B%CF.%21%88oH%91%28bfP%88%04%CA%82%FA%3AYR%F0%9A%22%F1%8D%0A%8D%C1%F0%A8%A3%09%BF%9Bu%DE%E5%F7%EE%8C%99%17%C69%21%14%1E%5C8r%8C%0B%B4I%DA%8DbT%D1%DC%5C%AB3%19%DB%CCCw%23%3A%A4%DF_%AB%ADV%9F%B8%F7%19J%08%80%B0%90%8B%25%C9%A7g%AF%09%9Bx%F4%DF%055jU0%08%1A%86a%C8%004%B1%0FO%1D3%0Etu%7F2%A7%BA%E2%B3%D7g%CD%A3%7E%81%0E%D6%A8k%D1%8E%F5%1F%28c%FEg%B3%19%E1%7F%A0%D9%23ZhF%A5%7C%B6%B2%A8%A1.%821%EB%C1%A4%90__%BB%7CQ%FA%DEd%AEo%AE%BE%A5e%29%08%B1%CB5%95%FF%E7-Wl%F9%E0T%CA%A9%95%E3%23%07%AF%B9g%9A%F7%BE%9C%8C%9D%ED%AC2%1D%21%F6%DEa%C3%0DrRb%B3%89%B6%EE%9Bfhjo%95%CF%00%3A%AB%20%3E%EE%83%A3%F9W%D6%87%FB%0F%B0%95%F1%D8%98%F1%D2%8F%CE%FC%FCG%AE%20%83%95%1C%29%22%8E%80%FFq%E5%84%29R%BE%E0%F0e%11%F7@%7B%11ie%C5%D2-%C7%8F%BC%04%83%02%8E%FB%CA%15%26%FA7%3B0%93%28%03.-%97%B9%E7X%BF%00%C5%EA%89S%A4%0E%98%A4J%3A%AE/r%7Fn%D6QA%7C%DC%7B%8EV%E2%102%C1%8Dg%11%C4%C7%7D%EC%21sy%F6%B5%991m%DEIc%D0K%F7d%FD%12%F9%BFk%B9%B9%82%F8%B8%E9%7C%13%05%BBLX%14%5C%AA%BA%C9wk%A6%7El%DF%E1%DCS%A5%85m%CE%91%EC%DA%F0%B5%87%CC%E5%91%17%A6%CC%94%B2%7D%B3%AC2%A8%3A.j%A8%93%BE%F0%E3%7E%5B%1Dw%16M%3AmRVeyTLH%28%D5%F6%7C%7E2%AE%7F%2C%F1%D2%05%9B%20%83%F3%DD%A5%B2%16%CE%F9%B3%E0%98%9FBIY*%B8%FE1X0%88E%A2%F7%C0G%FB%E8%E8%08%92%AF%3D%9F%9D%3CM%09%E3%EC%D3%F4SO%5C%AE%A9%9C%21%88%8F%9B%C8%9EX%BB%D3%97%08%A1%F0%CC%CC%A0%60%17zN%B03%BB@%99%D0%8F%A0%BD%0F%5E%CF%BD%2C%88%8F%9B%E6H0%F0%F5%23%E9%EE%0D%E7%06%B9%B9%87%BF0%25Z%16%EE%3F%80%9A%3F%F2%EA%AAaBos%0D%B4%FD%85%9Be.b%91%E8l%80%D25%F8%CD9%0B%E1y%A4%AC%5B%88%A1%0E6%A6%FCo%8D%CB%EE%8D%12%AD%C9%B8%03%9E%FD%FE%E1a.%90p%81%BD%18%7Fv%F24i%D2%95%ECa%BB2%CF%FF%24%88%8F%1B%C1%15B%3DQ%E7%DDyog%21%16%89%12%C7%07%0C%12%D3%8A%07%A4%F6%D3%1B%CC%E6%C5%BDM%3E%BB%5D%E8P%90%B9%CBd%F5%60j%ACo%D1%7C%19%3D4D%91VV%FC%F4%C3%E7%12%03%C0%D4%08%82%ED/%87%93VN%0B%1CF@%03%800%83%EC%F4%A9E%F9MA%1E%5E%CF6%E9%B4%BF%03%A2%06%23%E4%BE%BB%9C%A5%1F%E4%EA%7E%DDO%A1%A4L%0E%7C%9BlJ%09q.%F3%1Dr%28%C6g%A4_%D92w%A1%CD%C4%B8r%FCd%C9%C7gS%B7/%BD%B8%FF%1C%A3e%81%C9%13%06PJ%C1udE%D6%85%CD%3A%FD%D3JR%9A%94YY%EE%F3%E8%E8%08%29%21%14Fu%B6%3E%D9%26%1C%06%B0%026%98M%9Fu%A2%98%A43%A5Eq%7F%99%F1%EB%01%98%A84%C7%0D%C3%D8%8C4z%128%BBjB%A4%8C%CB%8A%84%FAdv%02%60X%91%DC%09%B8F%A3%26%12%B3.%20XE%B3%07%02%F84%F9v%11%60%DF%F3%0FSf%C8%D8%93%14%B4I%0A%ED%0B%85A%09%F7%82%81%0D%93S%D4%90%A1%E4%9F%0F%27%BD.%88%8Fs%3AnIB%10k%3FZ%B0H%EC%285%19%0C%2C%F8z4%FF*%2CLF%3ASfW%01%9A%18%08%B1%CFc%7F%27e%26+%BE%3A%0E%F6%F4v%18%1E%D2%09%A4fV%94%9B%C0z%C8%5C%02%7E%B2%FF%5D%CB%9D%C5%12%3E%8C%7FL%02%BE%E4%A2%86z%EAy%98g%03_%D8%F1%A2%7C%BB%F3%A7%07%05%8B%10%CB%3FF%9BB%29%B8Ie%AB_%8C%8A%A6%044%FC%0E%0B/6%A3v*%DD%96%D0%16%E0%16%D8%7C%EC%D0%E0%AC%CA%9Bv%04%A4%AE%F6%25%B1H%94%06%8B%03%A6/%C1%FD%C1%9A%03%7F%E1%DEp%9Cio%05I%BA%7Cw%F9R%A7%DA%DBO%A1%1C%0F%7Ef.%F9%CC%11%9At%DAAC%DC%3D%0C%9F%3D%FC%3B%D2Ayh%CB%DC%07d%AB%BF%DB%F3%1C%21%14%3E%F9%C7%A8h%17%AE%B0f%00c%F2TI%81%F2jmu%2CW%C3%EF%89%3A%EF%C9%F7%E6%83%20%3E.VB%101%C0@%87%9F%3F8%99%AC3%98%CD%3Bz%C3%B7%DAW%E8P%90%E9M%26%B9%84%20%02%EA%5B4%D2%BD%D9%17o%3D3i%AA%FB%A1%EB%97%B7%80FA%9B%F8%9E%01Ar5%A7%8AJ%DC%0B%1A%D5H%1F%BF-%25%8D%F5I%0AR%12%C1%AC%92%A1q%C1ge%B6Z%BC%98I-%A7%EA%260%BC%D4%90%0F%18Q%93h%B3%DD%BDAP-J%DF%FB%D4G%A7%7F%FE%06%A8%EC%88%9E%FC%9E%994%D5%F3%CB_%CE%1EF%08%851%E7%C2%20%83%DF%82%3C%3C%A74%EB%B49B%A1p%7E%ADF%5D%85%10%0A%1C%A0t%23A%18s%B5%B8%F6%DF%DB8*%9Cc%5E%B9ZS%D5%D2%19%86%18%ED+%B1%82p%60O%E4C%3D%BCj%8B%1B%EB%23%98%B2%A4%84x%DF%A3%A3%C7%D9%091%A8%AF%0D%C9%FFk%D1%99L%E5%0C+%92%10%0A%E7%0A%04%82%89r1i%01%EB%15%7DjI%7D%8B%E6%9D%C4K%BF%CCz%CCl%0E%0F%F7%1F%60%0BS%F8%EF%D5%9C%C6%C2%86%BA%FF%F2%99%20%98%7B%B2%07/LV%60%3A5%9A%CDPO%25%A4%88x%CEW%A1p%05%D6%25%C3%C0%FC%DB%FCX%E2%E5C%DF%C7%09%E2%E3%9C%F2%1D%AC%8D%9C%21%06S%063%11%B2%077%03%98%DCN%96%14%0C%01A%E3%8C%B6%DBU@%20%3BL%B6l%12%D3s%3F%7CcD%08e%E8M%A6%23t%B1%14%F3TF%88ML%BF%EC%0A%A0%ED%05%F1q.%EC%B6%E7%FA%BD%D8%FE1%86%DC%04%26WF%80%C0B*%A3%A2%DCfI%90%93%92%07%A1%0C%E6%7C%29%21%CE%D3%AE%D8b%B7%A2VS%D6%90%14%C3%F1%A2%7C%98%FC2%18%D3%A3X%24%BAg%7B%FA%A9%98%BF%CF%7FD%CC%08%E9%E7%23g%88%D7%24%ED%7D%84uy%97%FA%92X%24%3A%B4z%C2%14%9B%10%83%BE%FB%E7%C3I%26%93%C5%9Cn%B2XR%E0%B9%F7%E7f%8E%FA%3Cv%29%A5Q%C0%9Cp%28%EF%8A%D3%ED%0D%E18%CCd%CE%16%14%20t%1D%5D%E3%22%26%ADp%0D%5B%A0r%853%B4%0B%98%1C%83%BD%7C%A8%98%3C%A8S%98%93%E0%3E1%21%23%ED%FA%E8%FD%23%C2%A4%15%AA%E6U%7C%A6%EAn%D6y%8F%BE7%17%A0%F5%13B%E1%D7o%CEYH1%D0a%91R%DC%D8P%D6U%93%F9%9D%0A%DE%0A%81%EC%19ie%C5%DB%A0%D1%CD%16%8B%B7%C9b%F1%1B%E8%E6%B6%13%04WT%CA%0Ek%D4%90%20%05%08/%DAgf%F3%9D%01E%BEV%A3Zf%B1X%9F%8E%0D%1Bg%EB4%D0%89%DE%FC%F9%B0eN%F0%C8%D8%8A%E6%26%9B%C6%05%B6j9%29%A9f%26%0C%BE%15%1F%08%9Fy%A7%13b%92%0B%AE%3D%CD%0C%14%E8%80%0F%86%8E%1D5%F3%F8%17%A9%27%EF%FD%FD%2C%B8%FF%98%83%FF%F8p%D1%E8qD%D2%95%EC%12%B8%EF%B5%BA%9A%16w%A9%CC%F6%7E%E0%F7%EBL%1B%98%2C%16%19W%8B%A8%D5%A8%C54I%C1i%B8%88%C9%BCj%B5*%9C%5D%96%94%20%94%8C3%98%D6%12%86%B0%CDb0%F9%BDr%F8%80Qo2%FD%813%D0%19%E2D%2C%ED%BCF%B4%AFa3Mv%E0K%9D%92%C0C%F9nsO%18%C4%B4%10%8Bb%99%7C6%03ie%7B%FA%A9%B9@TA%B4%96%F6%F8%98%F1%92%FF%5C%CE%DA%8A%10%9A%D2%5E%3D%80%D0R%806%F7%ED.%83@%802AXH%08%E2%FE%84%8C%F4q%1F-X%24e%D7%C9%AA%09%91%D2%AF.%9E%E3%9D%28z%0A%1A%83a%18%5B%9B%85%C9%81%10%0AO%A8%97%BD%15%C3%BD%05%ED%B4%E7K5%E54%60R%CB%AE%BA9%C1%91%9F%8C%ED%1F%CB%AF%AF1%08%10%D2%E5T%DDt%FD%D5%A7%3A%90%8A%19c%CEo%F5%8F%B5%FE%06%D6%01%9D%C9x%98%FB%2C%DB%CE%1C%87%3F%EFA%3D%AA%97%BDi%27t%C0%0C%16%7F%F1%DC%DB%0C%01%09%EA%1F%046%BC+%B4y7%FA%92%07%7B%11%F6%EFs%27u%3A%93%F1%7D%96%D6%BEY%91%B8%E9br%C15%5B%5Dt%A6%BD_%9E6%1B%B5%9A%02%BF%D1%19%CC%26%F0W%EDf%FD%CC%EB%27z%24%2C%5C%00%7D%FA%83S%29F%8B%D5%9Al4%9B/%109%19%AF%AE%8F%BEO%C6%EE%03%60%EA%A7%88k%C7%0E%193*n%18M%16%CB%17b%91h%F8%A1%BC%CB%F72%82%B7%B5%AE%5C%91H%20%F0%E1%BBWw%EA%BC%A7%DF%9B%0B%F0%FB%C5%84%84%0A%A1%DF%80%20%A4M%C2%3D%C2%EA%BE%93%C0+%C8@%13%8AJ%D9%01%02%C6%0F%1A%FDLiQ%E8%B1%E8%A7%A8U%04%08%25XQ%FFr%B3%2C%96%F1%F3%80%B6s%AD%B6*%01V-/L%99iW%16%9C%BF%F9%D8a%D3%F4%C0%E0%E5%F0%FF%607w%DB*%D7%8A%ACUr%92%2CG%08%053%C7%18%E18%EFtBV%7DK%CBp/%17%97%BD%AD%02%F4%B3%89%B0HeO%0A%D5%EA%E6h%86%FC%11%E8%E1%F9%B7CyW%5E%8C%0D%0Bw%B9x%B3L5%D0%D5%ED%0D%B6%7FC%22%22%BA%9D%B7%A5Y%AFS%F4%04%C3g%B4%DF%00%ED%D5%DAj%98%28%93%DC%A4%B2U0%A8%D9%BF%EF%CAL7X%AD%E8%3BG%ABU%EB%EA%ADI%DC%F8%A2%CE%80%EF%9E%FBs24F%B3%F9o%DC%F7%03%D2%CA%E9%D2%A2%CA%27%C7%FF%AAY%C0%A4%B5%3F73%02V%7B%ED%91%5E%FC%E4J%08%06%07%E1%B8%94%7EfDO%94%09_%5DL%5B%B4%3E%FA%3E%9B%24%A3%B6%F29s%3C%BA%AB%EF%D4%15%C0%04%A67%99%A6%F1%C5w%D1%F5%D0%ADU+%AC%CC%F3%EBkG%C7%84%84RK%7B%B6%9F%ACU%E3%FD%D5%3F%06fH+B%DB.%DC%2C%7ByY%C4%3DT%BD@%7D%0B%90@H%0B%D5%20%B8VNJ%A8%05%10_%FCX%93N%7B%00%AC%EF%ED%F4%D1%AC%5B%3A-%C4%BB%D8B%03%7C%E4%0Ac%B3%5E%D7%865%E9%2C%B8%7D%09%26%DE%AB%B5%D5R%AE%0FXc%D0%EF%CE%AA%2C%1F%C3%F8%0CAH7%E9%B4N%B57%D4%C3%CB%87%0E%18%0Cf%D3z%EB%EA%ADm%C8%09%BE%DF%BEm%F7%3FC%DE%89%3B%FA%03%FCY%C3b/%96%FCx-w%5B%D4%90%A1%B6%F7%85%F9mc%F2%FF4%D9%D5%15e%26%8Be*c%EE%97%ED%DEXS%D4P%27c%9B%98EBa%9B%F9%B27%EB%BC%A3%F7%EE%08%20D%BD%5C%E4%E3W%8E%9FL%D5%F9%D6%93%C9%D0g%3E%F8-%E6%81u%A8%A2z%BA%B8%C4%27%17%5C%8B%03%C1%F1%FD%E5K%0F@%7CV%B3%5E%F7%1CT.%5B%E5%06%CD%AC%C5%60%D8%F6%D6%DC%85v%C7a5%04%BE%96%26%BD%F6F%98%AF%FF%13%90%05%04%84%CE%ECa%ADfqX%1D%28I%E9E%A3%C5%EC%C1%F6%0B%00@%B3%9B%3Dl%E48%10V%89Y%17%C0%27%97%0B4z%60K%06%7Bz%8Fb%93%3F%8A%1A%EA%9F%9Ew%3A%01%D1f%CE%F5%20T%0FN%7B%922%21.%BE%B0%8FZ%11%C2%E0J%9E%B9%BAOS%5C9%02%0Cf%AE%09%F3Li%91%D5%606%FF%F5v%DE%F3b%C5%0D9%1F%93%12%06%B6%22%F1%8D%D3ie%C5s%99U7%B4%15%F8v%B2*%29%B3%97%C3%15%F5%F5%BA%1A%83%D1l%7E%9E%25%C4%18%AC%3BUR%B8r%3Dk%1A%832%5D%25R%B53+%D5%AEBJ%88k%B3%AB*%7C%D8%2C%D2%3FFE%CB%FE%7D%EE%D4QE%E2%A6%5C%8DA%FF/%9A%8E%DCS%0E%F0%D4_%CA%CB%5EB%91%C8%D6%B9Y%7E%B2%12%C6%3F%06%FD%F3%96N%0B%A6%E2%84%92%C6%FA8v%01a%BE%FE-Y%95%E5%112B%1CI%C7%A2%B1%FDc%5C%E1%CBe%112%A1%05%0C%0D%BE%0D%BD%BB%BB%E0%F6%25%9Ay%5Ci4%9B%D7%81/%95%85%A0%B2%5B%8D%1A%C6g%08%F3%88%B3%ED%BD1%E5%A0%AE%B3%93%F9%A6c%07%8Dl%21F%23%AB%A8%A1%CEn%CE%03S%DB%E5%9A%AA%9BF%B3y*%BB%DDEB%C1%A5%C2%86%BA%B9%1D%F9J%7B%B3%CE%BB%F2%DE%EC%E7%00%12%CA%9Bs%16%90%8CI%B1Z%AD*%F9%AD%A6%CAs%28%C8%20%8BFT%CA%8E%D5S%87%0C%F5%83%E0%E7%1D%E7%CF%94@%E7%03f%0D%C3.%04%E1VX_%F7%E1%87%F3%7F%DD%D7%F2%BB%CBY%BAk%B5%D5%C5r%92%3C%0B%EC%C1%E4%99%ABm%B4%F7%3A%8Df%16%B3Z%02A%E7%26%95%7D%03%84%10%B6_%00%04%A3%C9b%9E%0F%7E%15%28knH%A8t%C7%F930%22%3E%06%B6%24%9B%FA%8Fh%FFJ%D2%95%EC%A7g%1E%FF%22%04%CC%8C%8C%1F%EC%FE%D3%3B%8F%3C%18%3A%C6%0D%BE%830%ED%89%CA%EA%A9%89%F6ru%05LHY4%5D%D9%E0%A7P%DA%1C%D2P%B7%16%AB%D5%D2%5B%A9%80h%BA%BD%9D%CF%0E%16%152%B1%B8%BEe%F9%16%DE%09%5Cc0%9Ci%D6%EB%A6%83%2C%60%8E%8D%F6%F5w%CF%AA%2Cow%90%1A%CC%26%92O%AB%84%09%C3%F5%EBM%A5%D9U%15%81l%9FEw%B5%83%8E%A03%19%B7oO%3F%B9%9EM%00%80%7E4u%C8P%F2lY%F1%84%FD%B9%99%DB%AB%D5%AAO%05%F1q%EF%D3%C9%9E%BB%25%D0@%CB%83%FA%B6%23p%D0%7E2%A3%D9%7C%FDW%FF%18%E5%97%C9%00%B3%94l%F7%C6%E6%A2%86%3A%5B%9EF8%E7JM%D5%7D%84H8%95%ED%1FSJ%24%A5%CDO%BC%E9%28%16%0C%98t%CF%CAIR%3B%CC%C3%DB%83%5D%C7%BE%ED%C4pv%16%7C%7D%09%C6%ED%E21%E3%C1%8C%BF%89%5B%1C%F7%DE%CE%B6w%A3%B6E%DA%99%C9%1C%E6%13%29%21%AE%D6%ADx%DB%AE%EF%D1%7EK%3B%BFgF%C5%0D0%83%BE%C6mk%171y%A5F%AD%9A%EB%CC%FDz%AB%CE%3B%FB%DEl%D0%3Ep%CAl%0A%FD%E5%DB%DCL%B0%8C%2C%E8%D2%83%DC%05h%D7i%18%A0t%7Di%7B%FA%A9%5D%90n%89%21%5B%A0%D6%F80%3Dh@%E0%A3Z1%7E2U%06L%86%87%F2%AE%5Cw%95H%E7%9D%9E%BD%867fKAJ%FC%98%01%7D%B1%E2F%CB/%F7%AD%DD%07%0CH%C6%DF%03%0D%AEj%D0C%23%B8%83%FF%C2l%B5%86%26f%5D%00%01%EA%07B%13L%9E%0C%F5%1F%2C%08%8C0%03M%C1%AFL%19%1D%95%B2%A3J%2C%12%5E%93%89%C5%EE%A3%7D%03%C6A%23B%DC%9A%8F%5C%99%D8%D9%A6%20%84Bm%B5Ze%E7%27%EB%CAD%DB%A4%D3%86s%7Dm%3A%93IE%FB%DA%82%FC%95J%D8%29%D4%E6%BF%ABn%25%AD%E4w%F6y%3B%81%88%21%EE%1E%95%EC%7BB%AC%0B%29%22%1C%F3%DA%11*%C9%AF%AB1s%0F%CAIR%CA%7Fz%C7%10%0A%84M%BD%F8%8E%BC%80%D5%28%B9%EB%F5%C5%CF%FD%F0%0DP%B2m%9B%BC%B6%3A%F7C%E1%23%83%7E%FC%DD%E5%AC%F5%A7J%0A_%15%C4%C7%AD%ED.%F9%A4%D5OV1%81%1B%1F%26%25%C4%83%19a%95__k%8B%07%93%10%C4%95%C2%86%BAhv%9EF%F0%A5%A9%F4z%1F%A6%0C%98%98LfK%1B%FF%18%F8N%C1%B1%3Fk%E8p%8A84%CC%D3%BB%CB%ED%E3%24%DA%F4%A5a%9D%60%7C%92%22%91%CC%89%D3%BA%04R%24j%E9%C4u%5D%5E%B0%F4A%9D%3B%05o%B9%7C0%E3%03%07%12%9D%D5j%B5t%E7%3D%EFt%B4+%C8@%BBY%94%BE%17%88%07%BBFx%F9R1%12IW%B3QD%C0%C0%3D%F0%BB%00%09%262+%8F%BD%D9%17%1BN%CF%5E%C3%CF_%A5%FDh%A1%3E%7E%D4j%08V%A8b%A1%10%02%5B%29%DF%150%85Z%E9%FB%AE%90%E3%11%D8ZP%E1%B7%DE%0C%8C%A6%7CusCB%FDN%96%14%3C%07%A6C%B8%06%A8%FFsN%7Cu%20%A7%AA%22%1642%98%88%60%90G%0D%19%0A%5B_%F81%F7%04%A1p%EEFq%DD%A5%F9/v%3AG%A3%84%10_e%3B%EA%01%A3%7C%FD%5D%0A%1B%EAb%9De.%B6%C6i%89%F4%7E%0A%A5%1Dw%B6%B8%B1%DE%87%A6M%F3%A5%20%C2%E8E%18%9E%7C%27%0Cb%DBV%7F%B7%E7%A5%B9%C1%23%11%13%07%C9%00%FA8%10%5B%E6%0D%0FCo%A4%1C%DCA%87%1AtY%98i%0C%FASlA%C6%F8%C9%AA%D4%CD6%13%27%DB%DF%C5%8D%3F%83%E7%D1%99%8C%3E%10%60%CC%EC%B6p%B1%A2L%AB5%19%8Fr%FB%1AB%E8%C0%1F%A3%A2%EDb%BE@0%C3%98b%87%178%A2%99w%05Z%A3%D1%8E%DE%CE%0E%DF%E8%08%9Da%DF%DD%89%E8%AB%3Aw%06L%E2%01D%5B%1D%B2*%CB%89%B3e%C5G%3A%22h%DD%AD%E8%B0%23%D1%A6%3A%D0%9C%D6U%A9%9B%D1%ECa%23%0E%D0%B4%F8%25%13%07%0E%A6%04%13h%3D%BEr%E5Z6%93%91%8BJUS%DCC%A3%C6RG%21n%27@%E9%06%AC7%04%BE%B3%98%93%F1%D4q0K4j%5BbUz%1D%F5%5C%20%AC%80%9E%1F%EC%E9%E5w%F0z%AE%5D%2C%18%90O%E0%7Eo%A4%1C%7C%8F/%80%18%84%E5%27%E7N%B6%8C%F4%F6s%8A%EA%CA%05%D79%8Dh%B3PJ%C1%F5%27%3AA%02%88%9D%168L%C0%3E%00%9A%A6%9C%24%8B%D4%CB%DE%02%A7%7FI%95J%E5%C5%FE%1D%26%D5%16%A3aDW%9E%D9Id%95%DDj%B4cpB%BD%1B%CC%A6%81%ED%5C%1E4%DC%DB%B7%CD.%A9%1A%83A%D7%93%0F%D6%15V%28b%99%B8%9C%05P%8FA%98%A5%14%5E%DF%7C%A2%A4%60%C9P%0F/%23kk%1E%0A%D0%9F%20Q%F4%BA%83%DFm%87%0C%11%DD03B%E4%20d%B1%00%00%0D%9BIDAT%DE%C5%A7%D8%5B%FE%80%AF+%AF%AEF%C5%04%9Bs%F2%25f%5D%AD%A9na%C7%9F%D1Y%29l%D7%977%DD%92q%17S%12%82%F8l%E5%F8H%C4%8E%E3z%23%E5%A0%AE%A0%A1%0E%08%3BG%E9%85SP%B0%A7%F7C1%21%A1%3D%B2%93%04m%3A%B5%EB%BF%20%C8%F6%E5d@%0A%B7%0F%9D%2C%E6%AEMB%DC%17u%EE%2C%80%9D%08%8B%27F%3B%06%ABZ%7E%7Dm80R%7F%8B%7E2%A7WD%5C%01U%D7%A2%7E%9E%11L%99%957n%88%04%C2%D51%21%A1%F3%26%FD%B4%FD%9D%E1%5E%3Ea%EC%94P%60%16%F4%96+F1+%DF%F3%E5%A5%A0%BD%D9b%BA%D4%06%03%C5%90%84J7%9A%CDn%D7%EBj%88A%AE%EE%23%8B%1A%EBC%FD%15%CA%1CG%C1%80%0C%ED%1FH%24%FBs3%97%86z%FB%BA%D0%E5%A1%E2%C6%BA%BA%AE%A4%A6b%21%E9xQ%FE%B6%B5%913l%FE%0D%E8%182%B1X%E9L%FC%0B%9D%12%E6%D5y%C3%C3%ECV%AC%87%AE_%D6h%0C%06%20%15P%D4yA%7C%1C%C9%8E5b3%D5z%83%F4@g%1CA%EC%7BB%BDk%8DF/G%DB%86%90%22b%84%ABDjg2%B9p%B3L%D5%9DI%88kr%85I%A0%23V%28%BD%D0%19%CC%F3%7C%DB%83%3D%BDtl%1F%5EG%A0%7D%90%90%3Bp%5D%5E%5DMlqc%FD%BB%FBs3%DD%21H%96%5D/%90V%AB%BC%E9VD72%CC%A7B%8A/%F6%01X%10%B9I%A46%7F%17%2Cl%98%DF%F8%FCj%90Z%89I%19%C5%E7%1F%A3%05y%24%C4%3E1%80%F4p%05%0Du%3F%03%EB%94%15x%0F%24%93%87%BA%F8%1E%BC%00%13%3C%9B%DD%07%3Ep%93%C5%E2%D2%13%3E%C6%3B%19%7DY%E7N%E2M%D8%3E%8A%89%01%85O%DC%CC%18%19%1D%03%9A%C5C%C0%BA%AB%E10%FB%BD3%80%01%0Fj%F4%20W%8F%AA%C2%86%BA%18%A0%BD%BF0e%A6%CB%CD%E6%5B%3B%D9%97%C3%FF%D3%03%83m%03W%22%22N%B2%7F%07%BF%16%93%AAJ%24%14%0E%91%88%88M%B7t-%B9%23%BD%7DS%98%DC%8B%ED%01%FCu%BF%DC%B7Vn0%9Bg%A8%0C%FA%3F%C9%C4%E2%A0K%F3_%F4%E9%CEN%D20%D1%91%22b%EF%CE%CC%F3z%F6q%08%A8%25%84%C2%7Fw%A4%05@J%98q%FE%03-lM%91N%B1%24d3%FD%DC%A4%B2%13%D9%9C%B4K%D3%02%87%C2%E4%FCjg%9F%B9Z%DD%EC%D4%C2%84%EF%9E%13%07%0C%D68%D24-VK%2Cw%93%D4%92%C6z%B2%AB%93%3B%2C%04%06%28%DDTlA%C6%9D%D0%01f%8B%C5%C4%FE%1F%26K%88%EFc%D7%3DP%F9%E5%24%F9%08h%E5%5Dy%16%98p%60Qbx%F2%9D%01%E5M%B7%BE%FD%24%ED%84%5D%EE%9F%A1%1E%5E%A6.%A47%B3+%1F%04%0F%7B7%07%A8%CB%B9%AC%E0a%8B%C5%FA%13%FB%1A7%A9%2C%1B%08%0B%0C%D8%A9%8B%C0%0C%CF%E3%1F%8B%80%20%7B%F6%82%AF%A4%B1%A1%C9h6%7F%D8Ua%E2l_%12%0A%84I%60e%60%00%CF%D0%5E_%FA%0D%A1%C7%EB%BC%27%01ZW%ADF%9D%0D%C2%95%29%16%C6%CFk3c%24%84P%98H%13T%7E3%E8%96%20C%B4%F6%E3%26%95%16M%0F%0C%7EBe%D0g%B0s%27%22z%83NH%11%C5%0C%C4C%D7/%AB%99%984%06J%894%8D%19%E8%DE.%0AO%09A%9C%DB7i%C9%D8%23%D3W%DEO%8A%88%10%BETV%7C%003%25hi%DD%11%60l%18%CC%A6%BF%1E%CD%BFjeOB%A0%95%CD%1A%3A%DC%85%14%11%D7%D8%99%C0%19%C0%24%0BA%C4%7E%0A%E5%BDq%D11%B6%D8%91VS%E7%09%AD%C9b%F9+%BB%A37%E9%B4%09%09%19%E9v%26%BA%27%C7G%92%08Y%17%81%19%80O%60B%27%84%09%9Cs8%95%5BO%E0%D3%23E%C4%1A%EE%F5%7C%F7%7C%7C%EC%049%24%0E%A6%ED%FE%EC%7B%25@%A2c%EE%5El%02%81%A0%C3%0C%F1%83%DC%DC%B5%90%DB%90%23x%DC%21a%EF%92%F0%09vZ%CA%7Fr3u%8C%A6%CA%C0l%B5%9A8E%A2%07B%C7%E8%A5%848%1D%EAF%B2kC%D5%207%F7%C5%10%5C%FD%D1%99%9F%DB%7B%14%E6%DE%9B%F9%DA%8C%85%24%95Aoa%1F%A0%EB%B4%5B%A9%7C@%F0%E4%B0%16%0EL%CA%22Dk%B6%5C%7F%97%C1d%3A%CB%3E%9F-%F0%F9%CE%E7%C3%00W7%21%5B%00S%FDRD%ACq%92%60%E1t_2%98M%9F%EF%CF%CD2%B0%C7%FD%EA%89S%E4%A4H%14%D7%DE%96Et%1F%5E%C7%EDow3%BAY%E7%3D%0E%BD%C9t%FF%A9%92B%13%7B%A1%01%F3%17%24%0E%96%12%E2%0E%FB%D0%DD%84n9%5B%A1%B3%83%80%FA%FA%D2%859a%BE%01%AF%E9L%C6%0F%B9%0C%BD%92%5B%F5_%AF%8D%9CI%99%D7%20M%91%BBL%B6%91%5B%0EP%FD%1FL%DB%F3%A7%A8%21C%25%A0%AA%FF%F7Z%0E%9C%F3%0C%08A%05%29%19%C8N%26%7C%3BA%9B%FE%9E%07%A7%3F%7BcM%60p%0E%F3%F4%F6K%C8H%3F*%DB%BD%D1%B6%B1%26%A4%A4%11%8BD%B3%D9%1Bk%22Z%88%BDr%F8%80%A1Z%AD%3A%CE%A5%D3%826%20%DB%BDq%7Db%D6%85%11%0C%CB%08%EA%F0%0FSfJ%B6%9D9%0E%14f%CA%9FC%9F%1E%A4%94Hf%91%22%91%BF%C1l%96p2O%94%D0Z%92%0D%8F%8E%8E%90%24%17%5C%7BL%B2k%03L8y%F4%F1%04%BE%7BB%3B%82%B6%F9%C9%B9%93i%82%F88*E%95%94%10/%1D%A0t%0Bxk%EEB%9B%B6%03%1A%04%9Dp%D4.H%88%0F%60%A6%FB%E0d%F2%23%F9%F5%B5%B1%82%F8%B8%CFQ%AB%29%EA%F7QC%82%08%B6%3F%0A%16%0A%F9%F5%B5VnL%9A%D6h%BC%9CVV%1C%CE%D6%06%D7F%CE%90%0C%F7%F2%19Q%A3VmbrAB%8C%8C%A3%3C%80%1Cl%F2W%B8%BE%04%13%8C%A7%CC%E5J%83%B6%25%9F%95%AB%10%F6%9E%5B%B2d%EC%04%BB%E0%5E%DA%2C%D8-%13%AF%D6dL%BFp%B3l%19%13%E8%CC%06%5D%7E*%E7%FC%A3%9D9%1F%9E%0F%08Dls%E43%93%A6z%5D%28/%8D%A3%05w%16%21%14%AE%09%F6%F4%12%B0%DB%12p%CF%A0@YYS%23%F8%01%BFe%99%03%3B%D3%97R%A5%BB7dnO%3F5%9E%9D%FD%E5%A3%05%8B%24%1BS%0E%BE%27%DB%BD%F1%AF%B0S%03%CB%F7%19%21%27%C9%99b%91H%E6*%91%0A%EB%5B4%F3%BAS%B7%7D%88%9E%AE%F3%1E%07%EDFX%F6%FE%C9%E4ov%C4.%950s3%10%E42+o%04%C1%22S%FF%E4%DB%BD%B2%D1%EF%EDF%97%05%D9@W%F7%95%FBs2r%5E%88%8AVB%86%F9%B4%B2%E2%12p%7C%EE8%7F%06XY%1B%10%1D%136%C2%CBw0T%204%F8%E9%D2%C2%1B%E7c%D6%F2%92A%9At%DAs%D5j%15E%3B%D6%19MK%20%08%BA%A8%A1%EE%B5W%A6%CF%A14%00%C8%BA%DF%17%15%04%93%3E%F8%94%5E%3E%F4%FDg%AB%26L%910A%C1%F07%26d%24%99%5DU1%A2%A8%A1%8E%8A%99a%92%FArc%B4%20%A2%1E%D4%7C%B0%9D%F3%DDCg2.%D9%97%93q%D6W%A1%B4%E5%3E%8C%A1%CCI%03%81%01%E6%C6%8E%C9a%F2%C5-%D8%F9%29%F79K%14%89%9B.%27%5D%C9%9E%C0%3C%23%3C%C7%9E%C7%9F%14%27%17%5C_%0A%F5%7F%28%EF%8Am%97%DFv%EE%29M%29%B8%B6%12%F1%B0%AD%E0%5D%DEM%FDIe0%9B%BFr%26%CF%E2%96%E3%87%D1%FB%F3%1E%96%82@H++%7E%89%FD%FC%EC2%21x%D5d%B1%AC%E5%0EhX%ED%1F%CE%BB%F2%E8%F2%88IvIS%B9B%90%9B%89%BD%3D%7C%F5%E82%CA%FFT%D8P%1FV%D4P%17%A61%E8%1FF%B4%96%04B%91i%3B8g%D3%B1%83%06%19%21%FE%AAe%05%7F%7C%5D%27%D0%C6O%86%7E%CD%97X%CB%CD%97%08%93%20W%90%A0v%E2%C7%A0%DE%60%7B%14%D8%A1%80%BD%18JZ%BE%06%84Ot%8DZ%15%CD%B0%26a%2C%B1S%93%3D9%7E%B2%D4U%22%1D%F5M%F6%C5W%9A%F5%BATf%9F%AE%CE%F4%25X%F9%9F%29-%BE%26%12%FC%EC%C7%84%E9%C08N%5C%BCR%9A%5DU%21%CD%A9%BA%F9%12s%3FvR%E6%AF.%9Ek%FCOnf7%AB%B6o%D0%D3u%DE%5B/%01%BE0%97%DD%1B%E37%1D%3B%F8%14%3B%7E%12r8.%DF%BF%EB1A%7C%DCO%BD%99%DF%F4v%A1%CB%A6E0%DFI%08%F1%EF%21%A6%0C%1A%10%1A%0A%06%9AP%28%F8%3F0%F1%A1V%A6%E2%CB%CC@%80m%5D%82%3D%7Df8*%0F%04%23%A4fB%AD%A6%09%85%00%09%B6-%8F%98%EC%0FegV%DE0t%26%E1oO%83%F2%A1%98%CD%90%23%B0z%DD%C1%EFT%8C%AA%CEL%7E%F0%EE%F0%81%09%96%BD36%EC%24%FD%C2%8F%FB%81%2C%F0%81n%C5%DBS%1C%AD%BC%80%E0%00%E9q%FEy%F6%84%06r%BE1%C9A%99ze%7F%98%9Ci%7C%D0%18%F4O%7Fu1M%0B%03%87%01%3C%23%B4%01%5C%CB%DE%E5%D7%99%7B%B2%D9X%A0%F5@%BA%9C%0AU%D3G%CE%26%1C%85l%EE%CB%F7%EF2%82%F9%99%29%93%EB3%A4sJ%7E%ED%20p%3AU%2C%12%9E%04m%96k%B2F%F4%04A%A7%21Z%EDl%93%D3qz%D4s0%F5%02%1F*%16%91n%3Bh%DF5I%DF%E8%AAT%AA%EFZVly%DE%D9%B2%1D%01%04%03%08%2Cn%BB%81%F9%D0b%B5%A6%F0%BCw%89P%20l%E6%3B%9F/%7E%0C%B5%9A%91%9E%DB%97%93a%D7%F6%88%16%FA%CC%D8%7C%F9%D0%F7%FAos3+%A1-%D9%80w%F7r%91%DB%ED%00%DD%C9%BEt%CB%606%85%9E.-%CA%5B%93%B4W%CB6eA%3D%B3%FB/%3C%0F%081x%B7%E2%86%3A%DE%CC%F4w%0Bz%BA%CE%7B%0B%D0%87k%D4%EA%12%F63@%5BB%22a%D8%01%FF%B7%60%DE%ED%96i%11%84%0B%044%FF3%ED%04%15%D0%0C%BE%AE%A3%D3WQ1%5B%C0T%1C%A0t%1F%0C%15%06%0D%EA.%93%ED%D2%9BLSf%1E%FFb%A7X%28j%E4%FA%C9@0%CE9%F1%D5%A1%E4%82k%B1%CC%86%9D%88%9E%AC%C6%F8%0D%F8%A8%5Bo%D9%03%A0%D9d%A1yu5%AB%60%3F1%D8%8A%05h%D1%23%BC%FD%A4%CC%E6%81%88%B51%23%21%14R%1B3%D2%A6%83%0E%D9%7Dt%D6%81A%E7%CBK%D7eV%96%BF%06%89E%B9%1B%F4%E5%D5US%D4%5E%28%1B%21%B4%C7A%19Sa%FF%B5%84%8Cs%23%27%0C%18%22ao%1A%D9%A0m%91%B5wO/%99%5C7%C6/%C0%9D%7DOfcM9I%A6%18%CC%A6w%3A%BB%F5%83%DEdZ%BC%F9%D8%A1%CF%A5%04%21%8F%1E%3A%9C%DA%D4%0F%CA%3DQ%9C%0F%99%FD5z%93iM%7B%0C*%8D%C1%F0%B8%C1lN%5C%F6%ED%CE9%EC%0D%0F%E1%FA%16%A3%11%EC%89%BF%A3%DB%26%9E%3DP%F9%FC%AA%90%A5%7DM%D2%5EJe%08%F1%F4%86%C5%93%5D%E2b%20X%5C%AE%A9h6%9A-%90%90%F7%D5%9E%5C%A9%82%C0%DA%93%F5%CBRv%7B%9C%28%29%D0%1A%CC%A6%9F%F8%CE%87%C0%E8%A4+%D9%D1%EC%E7%3B%92%7F%D5%E0%C8%3F%C6%B4%7DBF%FA%91os2%94L%5DC%3D%9C%2C%29%D0%8BE%C4e%83%D9%FC%0A%98%F8%F6%E7f%1D9QR%E0%CA%8E5%BA%A5%D3*%F9%CA%EBD_%82E%DAH%20%F2%7Cx%EA%D8%07f%ABE%19%EA%EDg%17%16%03%CFR%D6%D4%A8*n%AC%A7%B6%131%9A%CD%29%7C%CCW%88C%CBig%DF9%3E%B0%AF%E9%C8%A7%CE%EE%27%ED%C5%B2Q%BEq%FA%5C%BE2%7B%BA%CE%BB%F2%DE%DC%E7t%04%B0%C0%7C%9B%9B%99%A66%18%EC%E6%AB%C1n%EE%D2%F2%A6%A6%230%B7%DD%CD%2CS%81%D5j%ED%95%82%C1%AC8%CE%7F%E06%C6%87%B1g%C2c%82%C0%03%EF%EB%EF%1F%1EF%F9%9A%F6e_l%CA%B8%FF%856D%86%A8%94%CF2%11%12D%C0%A0%81%0E%01%1A%1E%DF%8E%D0%7D%0D%9A%F5%C3%B7%C5z%16%BD%CDz%B7%FC*%B4%9D%3D%82%B3e%BA%D3%DB%F0%3B%D8%C6%1F%B5%B7E%BA%83%7Bv%B8M%3BjM%DC%FA%8FW%A6%CFy%91%3Dq%81%F9%D3%BAz%AB%80U6%BB%AE%3A%BB%85%7C%10%9D%01%86w%0Bz%3Ac%3B%17%25%7C%C2%88%D5v%DCw-%A1%DF%B5%C7%C3%1E%1Cl3%8F%1C%B5G%3B%E7w%E8S%E1%5C%7B%8B%AE%AB%2C%CE9%B1%3C%01%F9%8E%9E%A5+%7D%C9%D15%A9t%BB8%BA%AE%C3-%FFy%AE%E1%AB+Gm%CFWN%9B%F7%E8L%99%3C%E7w%BA%CE%BB%F2%DE%ED%3C%27%EFu%0E%EE%CF%A0S%E3%F1N%C3m%13df%AB5%08%B4.H%08%1C%A0t%5DW%DA%D8%20M%9E%B9Z%C0w-%90%3C%F4f%D3%24%D8N%A6%A7%18%88%18%BD%8B%8E%04%19%06%06%06Fo%A1%D7R%C4%88%04%C2J%B0%95%D3%A9%A3%D0%9E%AC%0B%60%3E%1A/%17%93%07I%11%B1%CCO%A1l%13%D8%CA%80%F6%B1%DD%91%D9%EA10000%EE%2Ct%3B%8E%CC%11%C0%7FV%A3Q%D5%81%93%9E%A6IGD%1F%FFR%D5%A8m95yP%A0C%21%86%81%81%81%81%81%D1%19%F4j%D2NH%11%F5%F1%D9%D4%8C%D9%C3Fx%D2%D9%C5%15%CC%D6%E3Z%93%F1_N%14%81%81%81%81%81%81%D1.zU%90%D1%FE-/%C8%85%98%5Cpm%A2%94%10%BB%9A%AD%96%1B%DE.%8AO%FB%92N%8F%D1%3B%E8*%EB%0A%03%03%03%A3%3B%B8-%DB%28%DC%89%ACC%8C%9EE%ADF%7D%20%A5%F0z%23%AEV%0C%0C%8C%DB%8D%5Ec-b%60%60%60%60%60%DC%0E%F4%1A%D9%03%03%03%03%03%03%A3%D7%81%10%FA%7FC%B6%F3O%92%D5%B0%F7%00%00%00%00IEND%AEB%60%82") );
    var help = _fr.add(
      'iconbutton', 
      undefined, 
      unescape("%89PNG%0D%0A%1A%0A%00%00%00%0DIHDR%00%00%00%18%00%00%00%19%08%06%00%00%00++%EE%5D%00%00%00%09pHYs%00%00%0B%12%00%00%0B%12%01%D2%DD%7E%FC%00%00%02-IDATH%89c%FC%FF%FF%3F%03-%01%13MM%A7%87%05%2C%84%140%CE%AF0%60%60%60%00a%05%24%E1%0B%0C%0C%0C%07%FE%27v%7C%20%A8%1FW%1C0%CE%AF%28%E0%60a%AD%FA%FB%FF%1F%AF%B1%94%1C%87%B2%900%5C%EE%F4%D3G%9Fo%BDy%C5%CB%C6%CC%B2%FC%D7%DF%3FY%F8%2C%C2i%81%C0%F2%C6%8B%E1%BAFzz%12R%0C%97%5E%3Cc%F8%FA%EB%27X%DCRN%91AIH%84%E1%E5%97%CF%0C%D3O%1E%FE%7D%E9%C5%B3%FB%3F%FE%FC6%C7e%09%5E%0B%7E%FC%F9%AD%C9%C2%C4%F4%E5%EB%AF_%87%A0%C1%22%C0%C2%C4%94%1A%AEk%C4%15m%60%0AVW%BB%7B%CB%D7%B3%CF%1E%F7%FCO%ECh%C0f%0E%CE8%F8%F8%E3%FBz%06%06%86%FC%1F%89%1D%07P%5C4%BFb%C2%EA+%E7oD%1B%98%B2%83%F8%5E%EA%DA%DCw%DE%BD%09d%60%60%20%CD%02%5C.%FA%9F%D8%F1%80q%7E%05%3B%B2%D8%9F%7F%FF%FE%E02%87%E4d%CA8%BF%22@%80%83%F3%1B%8C%BF%E6%CA%F9%1F_%7F%FD%DCL%15%0B%18%E7W%08%B01%B3%CCH4%B6%E0%02%F1w%DF%B9%C1p%FB%ED%EB%7F%0C%0C%0C%13%A8b%01%1B3%CB4e%21a%7EW%15%0D%B0%E1%93%8F%1F%FC%FE%E7%DF%3Fk%7C%C9%94h%0B@%91+%C6%C3%13%D0%E4%E2%CDq%FC%D1%7D%98%E1V%FF%13%3B.%E0%D5GLa%C78%BF%C2%81%8D%99e%E7%CC%80%086P%7E%28%DC%B6%EE%C7%EF%BF%7F%23%FF%27vl%20%A4%97%28%1Fp%B3%B1%CD%CD%B6%B0e%13%E7%E1e8%F2%F0%1E%C8%F0%99%C4%18N%94%05%8C%F3+%14%7E%FF%FD+%0D%0Aw%10%B8%FA%F2%F9gP9D%8C%E1%0C%C4%14v%A0B%8E%9B%8D%FD%FF%D2%0B%A7%C1%9C%27%9F%3E%F0200%10%2C%E4H%B1%E0%C1%FB%EF%DF%3A%97%5E%3C%83%22F%AC%05%03_%1F%80%82H%90%93%AB%DCKM%8B%03%C4%D9v%EB%DA%8F%F7%DF%BF%1D%20%D6%17%C4X%C0%20%C4%C9%F5%3D%DA%C0%14l%C1%89%C7%0F%BE%BF%FF%FE%8D%B0%26R%2Cx%F7%FD%1B%27%2C%92Al%A2M%A7G%24%0F%F1f%0B%03%03%03%00T%A5%F5%85%11%F3X%B2%00%00%00%00IEND%AEB%60%82"), 
      {style: "toolbutton"} 
    )
    help.onClick = function() { openWebsite( "https://www.project-octopus.net/script-watermark" ) };
  }

  w.fields = {};
	var crnt_panel_name = "";
	var crnt_panel = null;
  for ( var nprop = 0; nprop < props.length; nprop++ ) {
    var p = props[nprop];
		if ( p.panel != crnt_panel_name ) {
			crnt_panel = w.main.add("panel {text: '" + p.panel + "', alignChildren: ['left', 'top']}")
			crnt_panel_name = p.panel
		}
		var row = crnt_panel.add("group {orientation: 'row', alignChildren: ['left', 'top']}");
    row.add("statictext", [undefined, undefined, lw, 20], __(p.name));
    // -----------------------------------------------------------------------------------------------------
    //  input
    // -----------------------------------------------------------------------------------------------------
    if ( p.type == "text" || p.type == "number") {
      w.fields[p.name] = row.add("edittext", [undefined, undefined, width, 20], state[p.name] )
      w.fields[p.name]._id = p.name;
      w.fields[p.name]._type = p.type;
      w.fields[p.name].onChange = function() {
        if ( this._type == "number" ) {
					var aux = this.text.replace(/,/, ".")
          if ( isNaN( Number(aux) ) ) {
            this.text = state[ this._id ];
          } else {
            state[ this._id ] = Math.round( Number( aux ) );
          }
        } else {
					state[ this._id ] = this.text;
				}
      }
    } else if ( p.type == "color" ) {
			// -----------------------------------------------------------------------------------------------------
			//  color
			//	27.4.23: Ich bau, der Einfachheit halber, mal nur eine Farbe ein
			// -----------------------------------------------------------------------------------------------------
			var crnt_color = 0,
					crnt_tones = get_crnt_tones( crnt_color ),
					crnt_tone = 0;
			if ( state.hasOwnProperty( p.name + '_color') && state.hasOwnProperty( p.name + '_tone') ) {
				for ( var n = 0; n <  color_names.length; n++ ) {
					if ( color_names[n] == state[p.name + "_color"] ) {
						crnt_color = n;
						crnt_tones = get_crnt_tones( crnt_color );
						for ( var m = 0; m < crnt_tones.length; m++ ) {
							if ( crnt_tones[m] == state[p.name + "_tone"] ) crnt_tone = m;
						}
					}
				}
			} else {
				if ( state[p.name].toString() == "BLACK" ) {
					state[p.name] = hexToRgb( color_values['black']['_100'] );
					state[p.name + "_color"] = color_names[ crnt_color ];
					state[p.name + "_tone"] = crnt_tones[ crnt_tone ];
				}
			}
		
			w.cname = row.add("dropdownlist", undefined, color_names );
			w.cname.selection = crnt_color;
			w.cname._id = p.name;
			w.ctone = row.add("dropdownlist", undefined, crnt_tones);
			w.ctone.selection = crnt_tone;
			w.ctone._id = p.name;
			w.cshow = row.add("group", [undefined, undefined, 120, 25]);
			set_color( w.cshow, crnt_color, crnt_tones, crnt_tone );
			w.cname.onChange = function () {
				crnt_color = this.selection.index;
				crnt_tones = get_crnt_tones( crnt_color );
				var ix = w.ctone.selection.index;
				w.ctone.removeAll();
				for ( var n = 0; n < crnt_tones.length; n++ ) {
					w.ctone.add("item", crnt_tones[n]);
				}
				if ( ix > crnt_tones.length ) {
					w.ctone.selection = Math.floor( crnt_tones.length / 2 );
				} else {
					w.ctone.selection = ix;
				}
				state[ this._id ] = set_color( w.cshow, crnt_color, crnt_tones, crnt_tone );
				state[ this._id + "_color"] = color_names[ crnt_color ];
			}
			w.ctone.onChange = function () {
				if ( this.selection ) {
					crnt_tone = this.selection.index;
					state[ this._id ] = set_color( w.cshow, crnt_color, crnt_tones, crnt_tone );
					state[ this._id + "_tone"] = crnt_tones[ crnt_tone ];
				}		
			}

		} else if ( p.type == "fonts" ) {
			// -----------------------------------------------------------------------------------------------------
			//  Font Families
			// -----------------------------------------------------------------------------------------------------
			w.fields[p.name] = row.add("dropdownlist", [undefined, undefined, width, 20], working_fonts.families)
			w.fields[p.name]._id = p.name;
			w.fields[p.name].selection = font_ix;
			w.fields[p.name].onChange = function() {
				font_ix = this.selection.index;
				state[this._id] = this.selection.text;

				w.fields.watermarkFontStyle.removeAll();
				for ( var n = 0; n < working_fonts.styles[font_ix].length; n++ ) {
					w.fields.watermarkFontStyle.add("item", working_fonts.styles[font_ix][n] );
				}
			}
		} else if ( p.type == "styles" ) {
			// -----------------------------------------------------------------------------------------------------
			//  Font Styles
			// -----------------------------------------------------------------------------------------------------
			w.fields[p.name] = row.add("dropdownlist", [undefined, undefined, width, 20], working_fonts.styles[font_ix])
			w.fields[p.name]._id = p.name;
			w.fields[p.name].selection = state[ p.name ];
			w.fields[p.name].onChange = function() {
				if ( this.selection ) {
					font_ix = this.selection.index;
					state[this._id] = this.selection.text;
				} 
			}
		} else if ( p.type == "enum") {
			var h_enum = [ "WATERMARK_H_LEFT", "WATERMARK_H_CENTER", "WATERMARK_H_RIGHT"]
			var v_enum = [ "WATERMARK_V_TOP", "WATERMARK_V_CENTER", "WATERMARK_V_BOTTOM"]
			if ( p.name == "watermarkHorizontalPosition") {
				w.fields[p.name] = row.add("dropdownlist", [undefined, undefined, width, 20], [__('links'), __('mitte'), __('rechts')])
				if ( state[p.name] == h_enum[0] || state[p.name] == WatermarkHorizontalPositionEnum[ h_enum[0] ] ) {
					// Der State soll String sein. Ist er anfangs nicht
					state[p.name] = h_enum[0];
					w.fields[p.name].selection = 0;
				}
				if ( state[p.name] == h_enum[1] || state[p.name] == WatermarkHorizontalPositionEnum[ h_enum[1] ] ) {
					// Der State soll String sein. Ist er anfangs nicht
					state[p.name] = h_enum[1];
					w.fields[p.name].selection = 1;
				}
				if ( state[p.name] == h_enum[2] || state[p.name] == WatermarkHorizontalPositionEnum[ h_enum[2] ] ) {
					// Der State soll String sein. Ist er anfangs nicht
					state[p.name] = h_enum[2];
					w.fields[p.name].selection = 2;
				}
				w.fields[p.name]._id = p.name;
				w.fields[p.name].onChange = function() {
					if ( this.selection ) {
						state[ this._id ] = h_enum[ this.selection.index ];
					}
				}
			} else if ( p.name == "watermarkVerticalPosition") {
				w.fields[p.name] = row.add("dropdownlist", [undefined, undefined, width, 20], [__('oben'), __('mitte'), __('unten')])
				if ( state[p.name] == v_enum[0] || state[p.name] == WatermarkVerticalPositionEnum[ v_enum[0] ] ) {
					// Der State soll String sein. Ist er anfangs nicht
					state[p.name] = v_enum[0];
					w.fields[p.name].selection = 0;
				}
				if ( state[p.name] == v_enum[1] || state[p.name] == WatermarkVerticalPositionEnum[ v_enum[1] ] ) {
					// Der State soll String sein. Ist er anfangs nicht
					state[p.name] = v_enum[1];
					w.fields[p.name].selection = 1;
				}
				if ( state[p.name] == v_enum[2] || state[p.name] == WatermarkVerticalPositionEnum[ v_enum[2] ] ) {
					// Der State soll String sein. Ist er anfangs nicht
					state[p.name] = v_enum[2];
					w.fields[p.name].selection = 2;
				}
				w.fields[p.name]._id = p.name;
				w.fields[p.name].onChange = function() {
					if ( this.selection ) {
						state[ this._id ] = v_enum[ this.selection.index ];
					}
				}
			}
		} else if ( p.type == "boolean" ) {
			w.fields[p.name] = row.add("checkbox")
			w.fields[p.name].value = state[p.name];
			w.fields[p.name]._id = p.name
			w.fields[p.name].onClick = function() {
				state[ this._id ] = this.value;
			}
    }	// elses
  }		// props loop

	// --------------------------------------------------------------------
	//	 Bug in ID: Print funzt nur, wenn Visibility an
	w.fields.watermarkDoPrint.enabled = w.fields.watermarkVisibility.value;
	w.fields.watermarkVisibility.onClick = function() {
		if ( this.value ) {
			w.fields.watermarkDoPrint.enabled = true;
		} else {
			w.fields.watermarkDoPrint.value = false;
			state.watermarkDoPrint = false;
			w.fields.watermarkDoPrint.enabled = false;
		}
	}



  w.defaultElement = w.btns.add('button', undefined, "OK")
  w.cancelElement = w.btns.add('button', undefined, "Abbrechen")

  w.footer.add('statictext', undefined, 'v' + version)

  var r = w.show();
	if ( r == 1 ) {
		// Wenn vorher nicht sichtbar, wird bei OK sichtbar gemacht
		if ( ! was_visible ) {
			state.watermarkVisibility = true;
		}
		doc.insertLabel( "cs_octopus_watermark", JSON.stringify( state ) );
		// $.writeln( JSON.stringify( state, undefined, 2))
		for ( var p in props ) {
			try {
				var nm = props[p].name;
				var v = state[nm];
				if ( nm == "watermarkVerticalPosition" ) {
					doc.watermarkPreferences[nm] = WatermarkVerticalPositionEnum[ v ];
				} else if ( nm == "watermarkHorizontalPosition" ) {
					doc.watermarkPreferences[nm] = WatermarkHorizontalPositionEnum[ v ];
				} else {
					doc.watermarkPreferences[nm] = v;
				}
			} catch(e) {
				errs.push( __('write-error') + nm + ": " + e );
			}
		}
	}


	function get_crnt_tones( crnt ) {
		var tones = [];
		for ( ctone in color_values[ color_names[ crnt ] ] ) {
			tones.push( ctone.substr(1) );
		}
		return tones;
	}
	function set_color( thing, _crnt_color, _crnt_tones, _crnt_tone ) {
		var cn = color_names[ _crnt_color ];
		var ct = "_" + _crnt_tones[ _crnt_tone ];
		var v = color_values[ cn ][ ct ];
		var v1 = hexToRgbSui( v );
		thing.graphics.backgroundColor = thing.graphics.newBrush(
			thing.graphics.BrushType.SOLID_COLOR,
			v1
		)
		return hexToRgb( v );
	}
}








// -------------------------------------------------------------------------------------------------------------------------
//  Manche Fonts funktionieren nicht. K.A. warum nicht
// -------------------------------------------------------------------------------------------------------------------------
function get_working_fonts() {
  doc = app.activeDocument;

  var prev1 = doc.watermarkPreferences.watermarkFontFamily;
  var prev2 = doc.watermarkPreferences.watermarkFontStyle;
  var prev3 = doc.watermarkPreferences.watermarkVisibility;
  doc.watermarkPreferences.watermarkVisibility = false;

  var working = [];
  var working_styles = [];
  var no_working = [];

  var allFonts = app.fonts.everyItem().getElements();
	var nFonts = allFonts.length;

  var count = -1;
  var last_family = "";
  for ( var n = 0; n < Math.min(200000, nFonts); n++ ) {
    var f = allFonts[n];
    if ( f.fontFamily != last_family ) {
      try {
        doc.watermarkPreferences.watermarkFontFamily = f.fontFamily;
        doc.watermarkPreferences.watermarkFontStyle = f.fontStyleName;
        count++;
        working[ count ] =  f.fontFamily;
        working_styles[ count ] = [ f.fontStyleName ];
      } catch(e) {
        no_working.push( f.fontFamily )
      }
      last_family = f.fontFamily;
    } else {
			try {	
				working_styles[ count ].push( f.fontStyleName );
			} catch(e) {
				working_styles[ count ].push("");
			}
    }
  }
	try {
		doc.watermarkPreferences.watermarkFontFamily = prev1;
		doc.watermarkPreferences.watermarkFontStyle = prev2;
		doc.watermarkPreferences.watermarkVisibility = prev3;
	} catch(e) {
		
	}

  var rs = {
    families: working,
    styles: working_styles
  }
  return rs;

}


function __( id ) {
  if ( typeof loc_strings == "undefined" ) loc_strings = load_translation();
  if (loc_strings.hasOwnProperty(id)) {
    return localize(loc_strings[id]);
  } else {
    return id
  }
}

function  load_translation() {
  return {
		"no-doc": {"de": "Es muss ein Dokument offen sein", "en": "You need an open document"},
    "links": {"de": "links", "en": "left" },
    "mitte": {"de": "mitte", "en": "center" },
    "rechts": {"de": "rechts", "en": "right" },
    "oben": {"de": "oben", "en": "top" },
    "unten": {"de": "unten", "en": "bottom" },

    "watermarkText" : { "de": "Wasserzeichentext", "en": "Watermarktext" },
    "watermarkFontColor" : { "de": "Fontfarbe", "en": "Fontcolor" },
    "watermarkFontFamily" : { "de": "Schrift", "en": "Font" },
    "watermarkFontStyle" : { "de": "Schnitt", "en": "Style" },
    "watermarkFontPointSize" : { "de": "Schriftgrad", "en": "Pointsize" },
    "watermarkHorizontalPosition" : { "de": "Horizontale Position", "en": "Position horizontal" },
    "watermarkVerticalPosition" : { "de": "Vertikale Position", "en": "Position vertical" },
    "watermarkHorizontalOffset" : { "de": "Horizontaler Versatz", "en": "Offset horizontal" },
    "watermarkVerticalOffset" : { "de": "Vertikaler Versatz", "en": "Offset vertical" },
    "watermarkOpacity" : { "de": "Deckkraft", "en": "Opacity" },
    "watermarkRotation" : { "de": "Rotation", "en": "Rotation" },
    "watermarkVisibility" : { "de": "Sichtbar im Dokument", "en": "Visible in Document" },
    "watermarkDoPrint" : { "de": "Sichtbar im Druck", "en": "Sichtbar im Druck" },
    "watermarkDrawInBack" : { "de": "Im Hintergrund", "en": "In Background" },


    // "Wasserzeichen": {"de": "Wasserzeichen", "en": "Watermark" },
    // "Wasserzeichentext": {"de": "Wasserzeichentext", "en": "Watermarktext" },
    // "Fontfarbe": {"de": "Fontfarbe (RGB)", "en": "Fontcolor (RGB)" },
    // "Font": {"de": "Font", "en": "Font" },
    // "Schriftgrad": {"de": "Schriftgrad", "en": "Pointsize" },
    // "Horizontale Position": {"de": "Horizontale Position", "en": "Position horizontal" },
    // "Vertikale Position": {"de": "Vertikale Position", "en": "Position vertical" },
    // "Deckkraft": {"de": "Deckkraft", "en": "Opacity" },
    // "Rotation": {"de": "Rotation", "en": "Rotation" },
    // "Horizontaler Versatz": {"de": "Horizontaler Versatz", "en": "Offset horizontal" },
    // "Vertikaler Versatz": {"de": "Vertikaler Versatz", "en": "Offset vertical" },
    // "in-doc": {"de": "Sichtbar im Dokument", "en": "Visible in Document" },
    // "in-print": {"de": "Sichtbar im Druck", "en": "Visible on Print" },
    // "in-back": {"de": "Im Hintergrund", "en": "In Background" },
    "fontfail": {
      "de": "Aus bisher ungeklärten Gründen akzeptiert InDesign manche Schriften nicht für Wasserzeichen. \r\rProbieren Sie bitte eine andere\r\rDie Eigenschaften der gewählten Schrift sind:\r", 
      "en": "For unclear reasons some fonts cannot be used for watermarks. \nProperties of the chosen font are: \n" 
    },

    "read-error": {"de": "Fehler beim Auslesen der Eigenschaft ", "en": "Error when reading property " },
    "xx": {"de": "xx", "en": "yy" },
  }
}

// --------------------------------------------------------------------------------------------------------------------------
function hexToRgbSui(hex) {
	var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
	var r = 0, g = 0, b = 0;
	if ( result ) {
		r = Math.round( parseInt(result[1], 16) / .255 ) / 1000;
		g = Math.round( parseInt(result[2], 16) / .255 ) / 1000;
		b = Math.round( parseInt(result[3], 16) / .255 ) / 1000;
	}
	return [ r, g, b ];
}
function hexToRgb(hex) {
	var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
	var r = 0, g = 0, b = 0;
	if ( result ) {
		r = ( parseInt(result[1], 16) );
		g = ( parseInt(result[2], 16) );
		b = ( parseInt(result[3], 16) );
	}
	return [ r, g, b ];
}








function openWebsite(url) {
	url = url.split(" ");
	url = url.join("+");
	url = encodeURI( url );
	if (File.fs == "Macintosh") {
		var tempFile = File("~/Desktop/tempurl.webloc");
		tempFile.open("w");
		tempFile.write("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\
		<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\
		<plist version=\"1.0\">\
			<dict>\
				<key>URL</key>\
				<string>"+url+"</string>\
			</dict>\
		</plist>");
		tempFile.close();
		tempFile.execute();
		for (var aux = 0; aux < 100; aux++) {
			$.sleep(10);
		}
		tempFile.remove();
	} else {
		var tempFile = File("~/Desktop/cuppascript.url");
		tempFile.open("w");
		tempFile.write("[InternetShortcut]\
URL="+url);
		tempFile.close();
		tempFile.execute();
		for (var aux = 0; aux < 100; aux++) {
			$.sleep(10);
		}
		tempFile.remove();
	}
}
// ----------------------------------------------------------------------------------------------------------------
// ----------------------------------------------------------------------------------------------------------------
function init() {

	if (typeof JSON !== "object") {
		JSON = {};
	}

	(function () {
		"use strict";

		var rx_one = /^[\],:{}\s]*$/;
		var rx_two = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g;
		var rx_three = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
		var rx_four = /(?:^|:|,)(?:\s*\[)+/g;
		var rx_escapable = /[\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;
		var rx_dangerous = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;

		function f(n) {
			// Format integers to have at least two digits.
			return (n < 10)
				? "0" + n
				: n;
		}

		function this_value() {
			return this.valueOf();
		}

		if (typeof Date.prototype.toJSON !== "function") {

			Date.prototype.toJSON = function () {

				return isFinite(this.valueOf())
					? (
						this.getUTCFullYear()
						+ "-"
						+ f(this.getUTCMonth() + 1)
						+ "-"
						+ f(this.getUTCDate())
						+ "T"
						+ f(this.getUTCHours())
						+ ":"
						+ f(this.getUTCMinutes())
						+ ":"
						+ f(this.getUTCSeconds())
						+ "Z"
					)
					: null;
			};

			Boolean.prototype.toJSON = this_value;
			Number.prototype.toJSON = this_value;
			String.prototype.toJSON = this_value;
		}

		var gap;
		var indent;
		var meta;
		var rep;


		function quote(string) {

	// If the string contains no control characters, no quote characters, and no
	// backslash characters, then we can safely slap some quotes around it.
	// Otherwise we must also replace the offending characters with safe escape
	// sequences.

			rx_escapable.lastIndex = 0;
			return rx_escapable.test(string)
				? "\"" + string.replace(rx_escapable, function (a) {
					var c = meta[a];
					return typeof c === "string"
						? c
						: "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4);
				}) + "\""
				: "\"" + string + "\"";
		}


		function str(key, holder) {

	// Produce a string from holder[key].

			var i;          // The loop counter.
			var k;          // The member key.
			var v;          // The member value.
			var length;
			var mind = gap;
			var partial;
			var value = holder[key];

	// If the value has a toJSON method, call it to obtain a replacement value.

			if (
				value
				&& typeof value === "object"
				&& typeof value.toJSON === "function"
			) {
				value = value.toJSON(key);
			}

	// If we were called with a replacer function, then call the replacer to
	// obtain a replacement value.

			if (typeof rep === "function") {
				value = rep.call(holder, key, value);
			}

	// What happens next depends on the value's type.

			switch (typeof value) {
			case "string":
				return quote(value);

			case "number":

	// JSON numbers must be finite. Encode non-finite numbers as null.

				return (isFinite(value))
					? String(value)
					: "null";

			case "boolean":
			case "null":

	// If the value is a boolean or null, convert it to a string. Note:
	// typeof null does not produce "null". The case is included here in
	// the remote chance that this gets fixed someday.

				return String(value);

	// If the type is "object", we might be dealing with an object or an array or
	// null.

			case "object":

	// Due to a specification blunder in ECMAScript, typeof null is "object",
	// so watch out for that case.

				if (!value) {
					return "null";
				}

	// Make an array to hold the partial results of stringifying this object value.

				gap += indent;
				partial = [];

	// Is the value an array?

				if (Object.prototype.toString.apply(value) === "[object Array]") {

	// The value is an array. Stringify every element. Use null as a placeholder
	// for non-JSON values.

					length = value.length;
					for (i = 0; i < length; i += 1) {
						partial[i] = str(i, value) || "null";
					}

	// Join all of the elements together, separated with commas, and wrap them in
	// brackets.

					v = partial.length === 0
						? "[]"
						: gap
							? (
								"[\n"
								+ gap
								+ partial.join(",\n" + gap)
								+ "\n"
								+ mind
								+ "]"
							)
							: "[" + partial.join(",") + "]";
					gap = mind;
					return v;
				}

	// If the replacer is an array, use it to select the members to be stringified.

				if (rep && typeof rep === "object") {
					length = rep.length;
					for (i = 0; i < length; i += 1) {
						if (typeof rep[i] === "string") {
							k = rep[i];
							v = str(k, value);
							if (v) {
								partial.push(quote(k) + (
									(gap)
										? ": "
										: ":"
								) + v);
							}
						}
					}
				} else {

	// Otherwise, iterate through all of the keys in the object.

					for (k in value) {
						if (Object.prototype.hasOwnProperty.call(value, k)) {
							v = str(k, value);
							if (v) {
								partial.push(quote(k) + (
									(gap)
										? ": "
										: ":"
								) + v);
							}
						}
					}
				}

	// Join all of the member texts together, separated with commas,
	// and wrap them in braces.

				v = partial.length === 0
					? "{}"
					: gap
						? "{\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "}"
						: "{" + partial.join(",") + "}";
				gap = mind;
				return v;
			}
		}

	// If the JSON object does not yet have a stringify method, give it one.

		if (typeof JSON.stringify !== "function") {
			meta = {    // table of character substitutions
				"\b": "\\b",
				"\t": "\\t",
				"\n": "\\n",
				"\f": "\\f",
				"\r": "\\r",
				"\"": "\\\"",
				"\\": "\\\\"
			};
			JSON.stringify = function (value, replacer, space) {

	// The stringify method takes a value and an optional replacer, and an optional
	// space parameter, and returns a JSON text. The replacer can be a function
	// that can replace values, or an array of strings that will select the keys.
	// A default replacer method can be provided. Use of the space parameter can
	// produce text that is more easily readable.

				var i;
				gap = "";
				indent = "";

	// If the space parameter is a number, make an indent string containing that
	// many spaces.

				if (typeof space === "number") {
					for (i = 0; i < space; i += 1) {
						indent += " ";
					}

	// If the space parameter is a string, it will be used as the indent string.

				} else if (typeof space === "string") {
					indent = space;
				}

	// If there is a replacer, it must be a function or an array.
	// Otherwise, throw an error.

				rep = replacer;
				if (replacer && typeof replacer !== "function" && (
					typeof replacer !== "object"
					|| typeof replacer.length !== "number"
				)) {
					throw new Error("JSON.stringify");
				}

	// Make a fake root object containing our value under the key of "".
	// Return the result of stringifying the value.

				return str("", {"": value});
			};
		}


	// If the JSON object does not yet have a parse method, give it one.

		if (typeof JSON.parse !== "function") {
			JSON.parse = function (text, reviver) {

	// The parse method takes a text and an optional reviver function, and returns
	// a JavaScript value if the text is a valid JSON text.

				var j;

				function walk(holder, key) {

	// The walk method is used to recursively walk the resulting structure so
	// that modifications can be made.

					var k;
					var v;
					var value = holder[key];
					if (value && typeof value === "object") {
						for (k in value) {
							if (Object.prototype.hasOwnProperty.call(value, k)) {
								v = walk(value, k);
								if (v !== undefined) {
									value[k] = v;
								} else {
									delete value[k];
								}
							}
						}
					}
					return reviver.call(holder, key, value);
				}


	// Parsing happens in four stages. In the first stage, we replace certain
	// Unicode characters with escape sequences. JavaScript handles many characters
	// incorrectly, either silently deleting them, or treating them as line endings.

				text = String(text);
				rx_dangerous.lastIndex = 0;
				if (rx_dangerous.test(text)) {
					text = text.replace(rx_dangerous, function (a) {
						return (
							"\\u"
							+ ("0000" + a.charCodeAt(0).toString(16)).slice(-4)
						);
					});
				}

	// In the second stage, we run the text against regular expressions that look
	// for non-JSON patterns. We are especially concerned with "()" and "new"
	// because they can cause invocation, and "=" because it can cause mutation.
	// But just to be safe, we want to reject all unexpected forms.

	// We split the second stage into 4 regexp operations in order to work around
	// crippling inefficiencies in IE's and Safari's regexp engines. First we
	// replace the JSON backslash pairs with "@" (a non-JSON character). Second, we
	// replace all simple value tokens with "]" characters. Third, we delete all
	// open brackets that follow a colon or comma or that begin the text. Finally,
	// we look to see that the remaining characters are only whitespace or "]" or
	// "," or ":" or "{" or "}". If that is so, then the text is safe for eval.

				if (
					rx_one.test(
						text
							.replace(rx_two, "@")
							.replace(rx_three, "]")
							.replace(rx_four, "")
					)
				) {

	// In the third stage we use the eval function to compile the text into a
	// JavaScript structure. The "{" operator is subject to a syntactic ambiguity
	// in JavaScript: it can begin a block or an object literal. We wrap the text
	// in parens to eliminate the ambiguity.

					j = eval("(" + text + ")");

	// In the optional fourth stage, we recursively walk the new structure, passing
	// each name/value pair to a reviver function for possible transformation.

					return (typeof reviver === "function")
						? walk({"": j}, "")
						: j;
				}

	// If the text is not JSON parseable, then a SyntaxError is thrown.

				throw new SyntaxError("JSON.parse");
			};
		}
	}());
}
function color_init() {
	// https://davidpiesse.github.io/tailwind-md-colours/
	var _colors = {
		"black-100": "#000000",
		"white-0": "#ffffff",
		"red-050": "#ffebee",
		"red-100": "#ffcdd2",
		"red-200": "#ef9a9a",
		"red-300": "#e57373",
		"red-400": "#ef5350",
		"red-500": "#f44336",
		"red-600": "#e53935",
		"red-700": "#d32f2f",
		"red-800": "#c62828",
		"red-900": "#b71c1c",
		"pink-050": "#fce4ec",
		"pink-100": "#f8bbd0",
		"pink-200": "#f48fb1",
		"pink-300": "#f06292",
		"pink-400": "#ec407a",
		"pink-500": "#e91e63",
		"pink-600": "#d81b60",
		"pink-700": "#c2185b",
		"pink-800": "#ad1457",
		"pink-900": "#880e4f",
		"purple-050": "#f3e5f5",
		"purple-100": "#e1bee7",
		"purple-200": "#ce93d8",
		"purple-300": "#ba68c8",
		"purple-400": "#ab47bc",
		"purple-500": "#9c27b0",
		"purple-600": "#8e24aa",
		"purple-700": "#7b1fa2",
		"purple-800": "#6a1b9a",
		"purple-900": "#4a148c",
		"deep-purple-050": "#ede7f6",
		"deep-purple-100": "#d1c4e9",
		"deep-purple-200": "#b39ddb",
		"deep-purple-300": "#9575cd",
		"deep-purple-400": "#7e57c2",
		"deep-purple-500": "#673ab7",
		"deep-purple-600": "#5e35b1",
		"deep-purple-700": "#512da8",
		"deep-purple-800": "#4527a0",
		"deep-purple-900": "#311b92",
		"indigo-050": "#e8eaf6",
		"indigo-100": "#c5cae9",
		"indigo-200": "#9fa8da",
		"indigo-300": "#7986cb",
		"indigo-400": "#5c6bc0",
		"indigo-500": "#3f51b5",
		"indigo-600": "#3949ab",
		"indigo-700": "#303f9f",
		"indigo-800": "#283593",
		"indigo-900": "#1a237e",
		"blue-050": "#e3f2fd",
		"blue-100": "#bbdefb",
		"blue-200": "#90caf9",
		"blue-300": "#64b5f6",
		"blue-400": "#42a5f5",
		"blue-500": "#2196f3",
		"blue-600": "#1e88e5",
		"blue-700": "#1976d2",
		"blue-800": "#1565c0",
		"blue-900": "#0d47a1",
		"light-blue-050": "#e1f5fe",
		"light-blue-100": "#b3e5fc",
		"light-blue-200": "#81d4fa",
		"light-blue-300": "#4fc3f7",
		"light-blue-400": "#29b6f6",
		"light-blue-500": "#03a9f4",
		"light-blue-600": "#039be5",
		"light-blue-700": "#0288d1",
		"light-blue-800": "#0277bd",
		"light-blue-900": "#01579b",
		"cyan-050": "#e0f7fa",
		"cyan-100": "#b2ebf2",
		"cyan-200": "#80deea",
		"cyan-300": "#4dd0e1",
		"cyan-400": "#26c6da",
		"cyan-500": "#00bcd4",
		"cyan-600": "#00acc1",
		"cyan-700": "#0097a7",
		"cyan-800": "#00838f",
		"cyan-900": "#006064",
		"teal-050": "#e0f2f1",
		"teal-100": "#b2dfdb",
		"teal-200": "#80cbc4",
		"teal-300": "#4db6ac",
		"teal-400": "#26a69a",
		"teal-500": "#009688",
		"teal-600": "#00897b",
		"teal-700": "#00796b",
		"teal-800": "#00695c",
		"teal-900": "#004d40",
		"green-050": "#e8f5e9",
		"green-100": "#c8e6c9",
		"green-200": "#a5d6a7",
		"green-300": "#81c784",
		"green-400": "#66bb6a",
		"green-500": "#4caf50",
		"green-600": "#43a047",
		"green-700": "#388e3c",
		"green-800": "#2e7d32",
		"green-900": "#1b5e20",
		"light-green-050": "#f1f8e9",
		"light-green-100": "#dcedc8",
		"light-green-200": "#c5e1a5",
		"light-green-300": "#aed581",
		"light-green-400": "#9ccc65",
		"light-green-500": "#8bc34a",
		"light-green-600": "#7cb342",
		"light-green-700": "#689f38",
		"light-green-800": "#558b2f",
		"light-green-900": "#33691e",
		"lime-050": "#f9fbe7",
		"lime-100": "#f0f4c3",
		"lime-200": "#e6ee9c",
		"lime-300": "#dce775",
		"lime-400": "#d4e157",
		"lime-500": "#cddc39",
		"lime-600": "#c0ca33",
		"lime-700": "#afb42b",
		"lime-800": "#9e9d24",
		"lime-900": "#827717",
		"yellow-050": "#fffde7",
		"yellow-100": "#fff9c4",
		"yellow-200": "#fff59d",
		"yellow-300": "#fff176",
		"yellow-400": "#ffee58",
		"yellow-500": "#ffeb3b",
		"yellow-600": "#fdd835",
		"yellow-700": "#fbc02d",
		"yellow-800": "#f9a825",
		"yellow-900": "#f57f17",
		"amber-050": "#fff8e1",
		"amber-100": "#ffecb3",
		"amber-200": "#ffe082",
		"amber-300": "#ffd54f",
		"amber-400": "#ffca28",
		"amber-500": "#ffc107",
		"amber-600": "#ffb300",
		"amber-700": "#ffa000",
		"amber-800": "#ff8f00",
		"amber-900": "#ff6f00",
		"orange-050": "#fff3e0",
		"orange-100": "#ffe0b2",
		"orange-200": "#ffcc80",
		"orange-300": "#ffb74d",
		"orange-400": "#ffa726",
		"orange-500": "#ff9800",
		"orange-600": "#fb8c00",
		"orange-700": "#f57c00",
		"orange-800": "#ef6c00",
		"orange-900": "#e65100",
		"deep-orange-050": "#fbe9e7",
		"deep-orange-100": "#ffccbc",
		"deep-orange-200": "#ffab91",
		"deep-orange-300": "#ff8a65",
		"deep-orange-400": "#ff7043",
		"deep-orange-500": "#ff5722",
		"deep-orange-600": "#f4511e",
		"deep-orange-700": "#e64a19",
		"deep-orange-800": "#d84315",
		"deep-orange-900": "#bf360c",
		"brown-050": "#efebe9",
		"brown-100": "#d7ccc8",
		"brown-200": "#bcaaa4",
		"brown-300": "#a1887f",
		"brown-400": "#8d6e63",
		"brown-500": "#795548",
		"brown-600": "#6d4c41",
		"brown-700": "#5d4037",
		"brown-800": "#4e342e",
		"brown-900": "#3e2723",
		"grey-050": "#fafafa",
		"grey-100": "#f5f5f5",
		"grey-200": "#eeeeee",
		"grey-300": "#e0e0e0",
		"grey-400": "#bdbdbd",
		"grey-500": "#9e9e9e",
		"grey-600": "#757575",
		"grey-700": "#616161",
		"grey-800": "#424242",
		"grey-900": "#212121",
		"blue-grey-050": "#eceff1",
		"blue-grey-100": "#cfd8dc",
		"blue-grey-200": "#b0bec5",
		"blue-grey-300": "#90a4ae",
		"blue-grey-400": "#78909c",
		"blue-grey-500": "#607d8b",
		"blue-grey-600": "#546e7a",
		"blue-grey-700": "#455a64",
		"blue-grey-800": "#37474f",
		"blue-grey-900": "#263238",
	};
	var rs = {};
	var ln = "";
	for ( var id in _colors ) {
		var c = id.split("-");
		var tone = c.pop();
		var name = c.join("-");
		if ( name != ln ) {
			// $.writeln( name );
			ln = name;
			rs[ name ] = {};
		}
		rs[ name ][ "_" + tone ] = _colors[ id ];
		// $.writeln( " - " + tone );
	}
	return rs;
}